<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Microsoft.Expression.Encoder</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Expression.Encoder.EncodeThumbnailProgressEventArgs">
      <summary>
            Contains the arguments of the encode progress event.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncodeThumbnailProgressEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the EncodeThumbnailProgressEventArgs class.
            </summary>
      <param name="currentThumbnail">The current thumbnail.</param>
      <param name="totalThumbnails">The total number of thumbnails to be created.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.EncodeThumbnailProgressEventArgs.CurrentThumbnail">
      <summary>
            Gets the number of the current thumbnail.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.EncodeThumbnailProgressEventArgs.TotalThumbnails">
      <summary>
            Gets the total number of thumbnails to be created.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.EncodeCompletedEventArgs">
      <summary>
            Class that specifies any arguments of the EncodeCompleted event.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncodeCompletedEventArgs.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the EncodeCompletedEventArgs class.
            </summary>
      <param name="cancel">Whether the encode was canceled.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.EncodeCompletedEventArgs.Cancel">
      <summary>
            Gets a value indicating whether the encode was canceled.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Job">
      <summary>
            Class that contains a job of media items that can be encoded.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.JobBase">
      <summary>
            A job, which is a list of files and other properties
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.EncoderObject">
      <summary>
            Base class for undoable objects. Handles the FieldsChanged Event.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobBase.#ctor">
      <summary>
            Initializes the JobBase class
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobBase.ApplyPreset(System.String)">
      <summary>
            Applies a preset to all the media items in the job.
            </summary>
      <param name="fileName">The file name of the preset to apply.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobBase.ApplyPreset(Microsoft.Expression.Encoder.Preset)">
      <summary>
            Applies a preset to all the media items in the job
            </summary>
      <param name="fileName">The file name of the preset to apply.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobBase.Save(System.String)">
      <summary>
            Save the job file to the passed file name.
            </summary>
      <param name="fileName">The file name to save the job to.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobBase.Dispose">
      <summary>
            Frees the resources that the job creates.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobBase.Finalize">
      <summary>
            Cleans up any resources that have been used.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobBase.Dispose(System.Boolean)">
      <summary>
            Frees the resources that the job creates.
            </summary>
      <param name="disposing">True to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.JobBase.Template">
      <summary>
            Gets or sets the template that will be used when the job is encoded.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.JobBase.TemplatePlugin">
      <summary>
            Gets the template plug-in.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.JobBase.OutputDirectory">
      <summary>
            Gets or sets the directory where the output is created.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.JobBase.ActualOutputDirectory">
      <summary>
            Gets the actual output directory that the job saves the output into.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.JobBase.SaveJobFileToOutputDirectory">
      <summary>
            Gets or sets a value indicating whether the job file is copied to the output directory during an encode.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.JobBase.CreateSubfolder">
      <summary>
            Gets or sets a value indicating whether the output will be created within a subfolder named with the job ID.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.JobBase.MediaItems">
      <summary>
            Gets the list of media items in the job.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.JobBase.DefaultMediaOutputFileName">
      <summary>
            Gets or sets the default file name to be used for the output media files.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.JobBase.JobId">
      <summary>
            Gets or sets the job ID.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.#ctor">
      <summary>
            Initializes a new instance of the Job class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.Dispose(System.Boolean)">
      <summary>
            Frees the resources that the job creates.
            </summary>
      <param name="disposing">True to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.Encode">
      <summary>
            Encode the current list of media items.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.CancelEncode">
      <summary>
            Cancel the current encode.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.PauseEncode">
      <summary>
            Pause the current encode.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.ResumeEncode">
      <summary>
            Resume the current encode.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.LoadJob(System.String)">
      <summary>
            Create a new job from a job file.
            </summary>
      <param name="fileName">The file name to load the job from.</param>
      <returns>The created job.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.OnEncodeProgressRaised(Microsoft.Expression.Encoder.EncodeProgressEventArgs)">
      <summary>
            Raise the encode progress event.
            </summary>
      <param name="e">The encode progress event arguments</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.OnStartFileEncodingRaised(Microsoft.Expression.Encoder.StartFileEncodingEventArgs)">
      <summary>
            Raise the start file encoding event.
            </summary>
      <param name="e">The start file name encoding event arguments.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.OnEncodeCompletedRaised(Microsoft.Expression.Encoder.EncodeCompletedEventArgs)">
      <summary>
            Raise the encode completed event.
            </summary>
      <param name="e">The encode completed event arguments</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Job.OnEncodeThumbnailProgressRaised(Microsoft.Expression.Encoder.EncodeThumbnailProgressEventArgs)">
      <summary>
            Raises the encode thumbnail progress event.
            </summary>
      <param name="e">The encode completed event arguments.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Job.EnablePartialRebuild">
      <summary>
            Gets or sets a value indicating whether partial rebuilding is enabled. 
            If it is enabled, a job that has previously been encoded will regenerate only the parts of the output
            that have changed if it is encoded again.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.EncodeProgressEventArgs">
      <summary>
            Contains the arguments of the encode progress event.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncodeProgressEventArgs.#ctor(Microsoft.Expression.Encoder.MediaItem,System.TimeSpan,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the EncodeProgressEventArgs class.
            </summary>
      <param name="item">The current media item that is being encoded.</param>
      <param name="currentPosition">The current position within the file that is being encoded</param>
      <param name="currentPass">The current pass of the encoding.</param>
      <param name="totalPasses">The total number of passes to be performed.</param>
      <param name="cancel">A value indicating whether the encode should be canceled.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.EncodeProgressEventArgs.Progress">
      <summary>
            Gets the progress so far within the current pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.EncodeProgressEventArgs.CurrentPosition">
      <summary>
            Gets the current position within the current pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.EncodeProgressEventArgs.CurrentItem">
      <summary>
            Gets the current media item that is being encoded.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.EncodeProgressEventArgs.CurrentPass">
      <summary>
            Gets the current pass of the encoding: 1 for the first pass and 2 for the second pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.EncodeProgressEventArgs.TotalPasses">
      <summary>
            Gets the total number of passes to be done on this file.
            Will return 1 while the pass count is being calculated.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.EncodeProgressEventArgs.Cancel">
      <summary>
            Gets or sets a value indicating whether the encode should be canceled.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.StartFileEncodingEventArgs">
      <summary>
            Contains the arguments to the start file name encoding event.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.StartFileEncodingEventArgs.#ctor(System.Int32,Microsoft.Expression.Encoder.MediaItem)">
      <summary>
            Initializes a new instance of the StartFileEncodingEventArgs class.
            </summary>
      <param name="fileNumber">The file number of the file about to be encoded.</param>
      <param name="item">The MediaItem of the file about to be encoded.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.StartFileEncodingEventArgs.FileNumber">
      <summary>
            Gets the file number of the file about to be encoded.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.StartFileEncodingEventArgs.MediaItem">
      <summary>
            Gets the MediaItem about to be encoded.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ArgumentErrorException">
      <summary>
            Base exception used when an invalid argument is passed
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ErrorException">
      <summary>
            Bases class of exceptions thrown by Expression Encoder.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ErrorException.#ctor(System.Exception,System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified inner exception, error message and a list of arguments.
            </summary>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ErrorException.#ctor(System.Exception)">
      <summary>
            Initializes a new instance of the class with a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ErrorException.ErrorCode">
      <summary>
            Gets the error code of the exception.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ArgumentErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ArgumentErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ArgumentErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ArgumentErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ArgumentErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.IndexingErrorException">
      <summary>
            The exception that is thrown when an error occurs indexing a file.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.IndexingErrorException.#ctor">
      <summary>
            Initializes a new instance of the IndexingErrorException class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.IndexingErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the IndexingErrorException class with serialized object data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.IndexingErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the IndexingErrorException class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.IndexingErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the IndexingErrorException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.AsfIndexer">
      <summary>
            Class used to index an ASF file.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.AsfIndexer.IndexFile(System.String)">
      <summary>
            Index an ASF file.
            </summary>
      <param name="fileName">The file name to be indexed.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.CaptionErrorException">
      <summary>
            The exception that is thrown if an error occurs during reading or writing to a caption file.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CaptionErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CaptionErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CaptionErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CaptionErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CaptionErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Clip">
      <summary>
            A source clip in the list of cuts
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Clip.#ctor">
      <summary>
            Initializes a new instance of the SourceClip class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Clip.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary>
            Initializes a new instance of the SourceClip class.
            </summary>
      <param name="startTime">The start time of the clip.</param>
      <param name="endTime">The end time of the clip.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Clip.EndTime">
      <summary>
            Gets or sets the end time of the clip.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Clip.StartTime">
      <summary>
            Gets or sets the start time of the clip.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ClipCollection">
      <summary>
            A collection of source clips.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.EncoderCollection`2">
      <summary>
            Base collection class for the objects
            </summary>
      <typeparam name="T">
      </typeparam>
      <typeparam name="TParentType">
      </typeparam>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncoderCollection`2.ClearItems">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncoderCollection`2.InsertItem(System.Int32,`0)">
      <summary>
            Sets up the parent objects.
            </summary>
      <param name="index">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ClipCollection.Reset">
      <summary>
            Resets the list of source clips back to the default.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ClipCollection.InsertItem(System.Int32,Microsoft.Expression.Encoder.Clip)">
      <summary>
            Item inserted into the list.
            </summary>
      <param name="index">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ClipCollection.RemoveItem(System.Int32)">
      <summary>
            Item removed from the list.
            </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ClipCollection.SplitAtTime(System.TimeSpan)">
      <summary>
            Splits a clip into two at a given time.
            </summary>
      <param name="timeSplit">The time to split the clip.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ClipCollection.RemoveSegment(System.TimeSpan,System.TimeSpan)">
      <summary>
            Removes a time segment from the list of clips.
            </summary>
      <param name="startTime">The start time of the segment to remove.</param>
      <param name="endTime">The end time of the segment to remove.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ClipCollection.IsValid">
      <summary>
            Gets a value indicating whether the current list of source clips is valid.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ClipCollection.PlaybackDuration">
      <summary>
            Gets the playback duration of the list of source clips.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ClipsErrorException">
      <summary>
            The exception that is thrown when an invalid source clip information is specified.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ClipsErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ClipsErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ClipsErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ClipsErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ClipsErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.CaptionFileType">
      <summary>
            The type of the caption file.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.CaptionFileType.Captions">
      <summary>
            Closed captions - dialog in the same language.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.CaptionFileType.Subtitles">
      <summary>
            Subtitles - dialog in an alternate language.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.CaptionFileType.Descriptive">
      <summary>
            Descriptive - description text.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.CaptionFile">
      <summary>
            A closed caption file (input).
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CaptionFile.#ctor">
      <summary>
            Intitalizes a new instance of the CaptionFile class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CaptionFile.#ctor(System.String)">
      <summary>
            Intitalizes a new instance of the CaptionFile class from a file.
            </summary>
      <param name="fileName">The file name of the caption file.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.CaptionFile.CaptionType">
      <summary>
            Gets or sets the type of this caption file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.CaptionFile.Language">
      <summary>
            Gets or sets the language of this caption file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.CaptionFile.Offset">
      <summary>
            Gets or sets the offset to apply to all caption times.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.CaptionFile.FileName">
      <summary>
            Gets or sets the file name of the source caption file.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.CaptionFileCollection">
      <summary>
            Class used to hold a collection of caption files.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Devices.EncoderDeviceResults">
      <summary>
            The results of a device list query to the system. This class contains all of the Added and Removed
            devices since the last time QueryForDeviceChanges was called.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Devices.EncoderDeviceResults.#ctor">
      <summary>
            Initializes a new instance of the EncoderDeviceResults class.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Devices.EncoderDeviceResults.Added">
      <summary>
            Gets the list of devices that have been added to the system.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Devices.EncoderDeviceResults.Removed">
      <summary>
            Gets the list of devices that have been removed from the system.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Devices.EncoderDeviceType">
      <summary>
            An enumeration of device types that can be queried for.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Devices.EncoderDeviceType.Audio">
      <summary>
            An audio device.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Devices.EncoderDeviceType.Video">
      <summary>
            A video device.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Drm">
      <summary>
            Class used to indicate the DRM parameters.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Drm.#ctor">
      <summary>
            Initalizes a new instance of the Drm class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Drm.Clone">
      <summary>
            Makes a deep copy of the DRM object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Drm.KeyId">
      <summary>
            Gets or sets the key ID to use
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Drm.KeySeed">
      <summary>
            Gets or sets a string encoded in base 64 that is used to specify the key seed.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Drm.LicenseAcquisitionUrl">
      <summary>
            Gets or sets the license acquisition URL.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureAudioException">
      <summary>
            An audio screen capture exception.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureException">
      <summary>
            A screen capture exception.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureException.#ctor">
      <summary>
            Initializes a new instance of the ScreenCaptureException class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the ScreenCaptureException class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the ScreenCaptureException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the ScreenCaptureException class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureAudioException.#ctor">
      <summary>
            Initializes a new instance of the ScreenCaptureAudioException class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureAudioException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the ScreenCaptureAudioException class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureAudioException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the ScreenCaptureAudioException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureAudioException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the ScreenCaptureAudioException class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureStatistics">
      <summary>
            The statistics of the current screen capture session
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureStatistics.FrameCount">
      <summary>
            Gets the total frames captured since capture start.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureStatistics.Size">
      <summary>
            Gets the total output since start since capture start (in bytes).
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureStatistics.Duration">
      <summary>
            Gets the duration since capture start.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.ScreenCaptureVideoProfile">
      <summary>
            The video profiles used for screen capture
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.VideoProfile">
      <summary>
            The base class for video profiles.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.ProfileBase">
      <summary>
            The base class for profiles.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.ProfileBase.#ctor(System.String)">
      <summary>
            Initializes a new instance of the ProfileBase class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.ProfileBase.#ctor">
      <summary>
            Initializes a new instance of the ProfileBase class.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ProfileBase.Bitrate">
      <summary>
            Gets or sets the bitrate to use when encoding.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ProfileBase.IsEditable">
      <summary>
            Gets a value indicating whether the profile can be modified.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ProfileBase.XmlDescription">
      <summary>
            Gets the XML description of the profile if the profile was initialized from
            an XML profile string.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ProfileBase.StreamCopyOnly">
      <summary>
            Gets a value indicating whether this profile supports only stream copying.
            This can happen if the decoder is installed but the encoder is not installed.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VideoProfile.SetAspectRatio(System.Double)">
      <summary>
            Sets the aspect ratio used to encode the profile.
            </summary>
      <param name="aspectRatio">The aspect ratio to set.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VideoProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.AutoFit">
      <summary>
            Gets or set a value indicating whether the output resolution is calculated by 
            fitting the source media item within the profile's size.
            For example, if AutoFit is set to true and the profile is set to 320 x 240 
            with an aspect ratio of 16:9, the output size will be 320 x 180. 
            If AutoFit is set to false, the output size will be 320 x 240 and 
            the video will be encoded with non-square pixels.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.ActualAspectRatio">
      <summary>
            Gets the actual aspect ratio of the video profile. Note that if you're using square pixels
            (when AutoFit equals true), the actual aspect ratio may be slightly different than the aspect
            ratio that is passed to the SetAspectRatio method, because the video frame dimensions are rounded 
            to the nearest 4 or 16 pixels.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.AspectRatio">
      <summary>
            Gets or sets the aspect ratio used to encode the profile. If set to null, the aspect ratio
            is controlled by the width and height of the stream.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.Bitrate">
      <summary>
            Gets or sets the bitrate to use when encoding.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.Size">
      <summary>
            Gets or sets the size of the video profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.Force16Pixels">
      <summary>
            Gets a value indicating whether auto-calculated dimensions are rounded to 16 pixels (true), or 4 pixels (false).
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.FrameRate">
      <summary>
            Gets or sets the frame rate in frames per second. Zero (0) means that
            frame rate of the source file will be used.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.KeyFrameDistance">
      <summary>
            Gets or sets the key frame distance.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.Streams">
      <summary>
            Gets or sets the collection of streams.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.SeparateFilesPerStream">
      <summary>
            Gets a value indicating whether a separate file is created for each stream.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.SmoothStreaming">
      <summary>
            Gets or sets a value indicating whether the profile uses smooth streaming.
            Note that if you're using VC-1, setting this property to true will cause the following properties to be set as follows:
            ClosedGop to true, AdaptiveGop to false, and OutputMode to
            ElementaryStreamSequenceHeader. When you are using Smooth Streaming, the bitrate of the streams must be
            either all ConstantBitrate or all VariableConstrainedBitrate.
            </summary>
      <remarks>Note that when you are using smooth streaming with a VariableConstrainedBitrate the following properties are ignored, 
            because they are set automatically during encoding:
            AdaptiveDeadZone, BFrameCount, Complexity, DenoiseFilter, DifferentialQuantization, InLoopFilter, 
            MotionChromaSearch, MotionMatchMethod, MotionSearchRange, NoiseEdgeRemovalFilter, and OverlapSmoothingFilter.
            </remarks>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.NumberOfEncoderThreads">
      <summary>
            Gets or sets the number of threads used by the encoder. Defaults to 0 to allow the
            encoder to choose a value based on the video and the number of logical processors available. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VideoProfile.Codec">
      <summary>
            Get the video codec type
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.ScreenCaptureVideoProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ScreenCaptureVideoProfile.Quality">
      <summary>
            Gets and sets the quality of frames of screen capture: 1 is the worst and 100 is the best.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ScreenCaptureVideoProfile.KeyFrameDistance">
      <summary>
            Gets and sets the key frame distance in seconds, from 0 to 60.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ScreenCaptureVideoProfile.Bitrate">
      <summary>
            Gets and sets the bitrate, from 20.48Kbps to 300Mbps.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ScreenCaptureVideoProfile.Codec">
      <summary>
            Gets the codec type.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.RecordStatus">
      <summary>
            Screen capture status.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.RecordStatus.NotStarted">
      <summary>
            Before a screen capture session is started or after one is finished.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.RecordStatus.Stopped">
      <summary>
            After a screen capture session is stopped.  
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.RecordStatus.Paused">
      <summary>
            When a screen capture session is paused.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.RecordStatus.Running">
      <summary>
            When a screen capture session is running.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.RectangleSelectionUtilities">
      <summary>
            Class to help with screen capture selection.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.RectangleSelectionUtilities.GetWindowRect(System.IntPtr)">
      <summary>
            Gets the rectangle of a specific window.
            </summary>
      <param name="window">The hwnd of the window.</param>
      <returns>The rectangle of the window.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.RectangleSelectionUtilities.GetWindowRectByTitle(System.String)">
      <summary>
            Gets the rectangle of a specific window by title.
            </summary>
      <param name="title">The title of the window.</param>
      <returns>A rectangle with height and width equal to 0 when the window is not found.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.RectangleSelectionUtilities.GetScreenRect(System.Int32)">
      <summary>
            Gets the rectangle of a monitor.
            </summary>
      <param name="index">0 for whole virtual screen, greater than 0 for the selected monitor number.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventArgs">
      <summary>
            Class that represents the arguments of a screen capture event.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventArgs.#ctor(Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventType)">
      <summary>
            Initializes a new instance of the ScreenCaptureEventArgs class.
            </summary>
      <param name="message">The message type.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventArgs.Message">
      <summary>
            Gets the message type.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventType">
      <summary>
            The type of the screen capture event.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventType.Normal">
      <summary>
            No Error
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventType.OfficeIrm">
      <summary>
            IRM-protected office document has been opened.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventType.RecorderTimer">
      <summary>
            Recorder duration timer.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventType.OutOfSpace">
      <summary>
            Out of disk space.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventType.SkuLimit">
      <summary>
            Time limit for Standard SKU.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureEventType.NoDisplayDevice">
      <summary>
            All display devices are disabled or virtual.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob">
      <summary>
            Class that contains a job of screen capture sessions.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.#ctor">
      <summary>
            Initializes a new instance of the ScreenScreenCaptureJob class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.Finalize">
      <summary>
            Disposes a screen capture job.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.AddAudioDeviceSource(Microsoft.Expression.Encoder.Devices.EncoderDevice)">
      <summary>
            Add an audio device to the capture source.
            </summary>
      <param name="source">The audio device to add.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.RemoveAudioDeviceSource(Microsoft.Expression.Encoder.Devices.EncoderDevice)">
      <summary>
            Remove an audio device from the capture source.
            </summary>
      <param name="source">The audio device to remove.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.Start">
      <summary>
            Start a screen capture session.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.Pause">
      <summary>
            Pause the screen capture session.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.Resume">
      <summary>
            Resume the screen capture session.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.Stop">
      <summary>
            Stop the screen capture session.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.ResetSettings">
      <summary>
            Reset the settings to default.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.EnableZoom">
      <summary>
            Enable zooming of the captured rectangle area.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.DisableZoom">
      <summary>
            Disable zooming of the captured rectangle area.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.Dispose">
      <summary>
            Frees the resources that the job creates.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.Dispose(System.Boolean)">
      <summary>
            Frees the resources that the job creates.
            </summary>
      <param name="disposing">True to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.CaptureRectangle">
      <summary>
            Gets or sets the screen recording rectangle.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.ScreenCaptureAudioProfile">
      <summary>
            Gets or sets the audio profile of audio capture. 
            The bitrate must match the following:
            1 pass CBR settings. 
            Bits Per Sample: 16.
            Codec: WMA.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.WebcamVideoProfile">
      <summary>
            Gets or sets the video profile of the webcam. 
            The bitrate must use 1-pass CBR settings.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.ScreenCaptureVideoProfile">
      <summary>
            Gets or sets the video profile of screen capture. 
            The bitrate must use a 1 pass CBR settings.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.AudioDeviceSources">
      <summary>
            Gets the list of selected audio capture sources.  
            Use AddAudioDeviceSource and RemoveAudioDeviceSource to change the list.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.VideoDeviceSource">
      <summary>
            Gets or sets the video capture source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.ShowCountdown">
      <summary>
            Gets or sets a value indicating whether a countdown is shown before recording.  
            When it is set to true, the calling thread must have a STAThread attribute.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.ShowFlashingBoundary">
      <summary>
            Gets or sets a value indicating whether a flashing boundary is shown during recording. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.CaptureMouseCursor">
      <summary>
            Gets or sets a value indicating whether mouse movements are recorded in the video.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.OutputPath">
      <summary>
            Gets or sets the output path of the screen and webcam recording.  The directory will be created if it doesn't exist.
            The filename formats are:
            Screen capture file: [OutputPath]\ScreenCapture_[Date Time].xesc
            Webcam capture file: [OutputPath]\Webcam_[Date Time].wmv. 
            If the user defines OutputScreenCaptureFileName or OutputWebcamFileName, the corresponding output
            file will be used for the screen capture file name and the webcam capture file name instead of using OutputPath.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.OutputScreenCaptureFileName">
      <summary>
            Gets or sets the output path of the screen capture recording.  
            If it is not defined, the screen capture output file name will be generated using the OutputPath property.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.OutputWebcamFileName">
      <summary>
            Gets or sets the output path of the webcam recording.  
            If it is not defined, the webcam output file name will be generated using the OutputPath property.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.ScreenCaptureFileName">
      <summary>
            Gets the output screen capture file name of the latest screen capture session started.
            </summary>
      <returns>An empty string when no screen capture output is found.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.WebcamFileName">
      <summary>
            Gets the output webcam file name of the latest screen capture session started.
            </summary>
      <returns>An empty string when no webcam capture output is found.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.Status">
      <summary>
            Gets the screen capture status.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.Statistics">
      <summary>
            Gets the statistics of the recording session.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureJob.Duration">
      <summary>
            Gets or sets the duration of screen capture after calling Start().  It can't be less than 2 seconds.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureStatusEventArgs">
      <summary>
            The arguments of the event that occurs when the screen capture status changes.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureStatusEventArgs.#ctor(Microsoft.Expression.Encoder.ScreenCapture.RecordStatus,Microsoft.Expression.Encoder.ScreenCapture.RecordStatus)">
      <summary>
            Initializes a new instance of the ScreenCaptureStatusEventArgs class.
            </summary>
      <param name="newState">The new state.</param>
      <param name="oldState">The old state.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureStatusEventArgs.NewState">
      <summary>
            Gets the new state.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureStatusEventArgs.OldState">
      <summary>
            Gets the old state.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.WebcamErrorEventArgs">
      <summary>
            Class that handles the event arguments when there is a webcam error.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.WebcamErrorEventArgs.#ctor(Microsoft.Expression.Encoder.ScreenCapture.WebcamErrorType)">
      <summary>
            Initializes a new instance of the WebcamErrorEventArgs class.
            </summary>
      <param name="errorType">The type of error.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.WebcamErrorEventArgs.ErrorType">
      <summary>
            Gets the type of error.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.WebcamErrorType">
      <summary>
            The types of webcam errors.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.WebcamErrorType.DeviceNotSupported">
      <summary>
            Device is not supported.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.WebcamErrorType.DeviceLost">
      <summary>
            Capture device lost, in other words, the webcam is unplugged.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.WebcamErrorType.IOError">
      <summary>
            Input-Output error, in other words, the disk is full, the disk has been removed, or the  remote folder failed.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ScreenCapture.WebcamErrorType.OtherError">
      <summary>
            General error: ErrorAbort, WMT_Error (error from the Windows Media SDK)......
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureWebcamException">
      <summary>
            A screen capture webcam exception.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureWebcamException.#ctor">
      <summary>
            Initializes a new instance of the ScreenCaptureWebcamException class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureWebcamException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the ScreenCaptureWebcamException class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureWebcamException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the ScreenCaptureWebcamException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.ScreenCaptureWebcamException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the ScreenCaptureWebcamException class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScreenCapture.OutputErrorEventArgs">
      <summary>
            Class that represents the arguments to an output error event.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScreenCapture.OutputErrorEventArgs.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the OutputErrorEventArgs class.
            </summary>
      <param name="errorCode">The error code</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScreenCapture.OutputErrorEventArgs.ErrorCode">
      <summary>
            Gets the error code.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Devices.EncoderDevices">
      <summary>
            Class to look for devices.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Devices.EncoderDevices.FindDevices(Microsoft.Expression.Encoder.Devices.EncoderDeviceType)">
      <summary>
            Looks for devices of the specified type on the system.
            </summary>
      <param name="deviceType">The type of devices to look for.</param>
      <returns>The collection of devices for the given type. This can be an empty collection if none are found.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Devices.EncoderDevices.CheckForDeviceChanges(Microsoft.Expression.Encoder.Devices.EncoderDeviceType,Microsoft.Expression.Encoder.Devices.EncoderDeviceResults)">
      <summary>
            Checks for any device changes between two different calls to this function.
            </summary>
      <param name="deviceType">The device type for which Expression Encoder is looking for changes.</param>
      <param name="lastResults">The results of the last call to this function. This can be null for the first
            time the function is called, in which case all devices of the given type will be returned in EncoderDeviceResults.Added.
            </param>
      <returns>The new list of devices that have been added or removed since the last call.</returns>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ImageFile">
      <summary>
            An image input.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.MediaFile">
      <summary>
            A source input.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaFile.Create(System.String)">
      <summary>
            Create a source from a file name.
            </summary>
      <param name="fileName">The file name.</param>
      <returns>The created MediaFile class.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaFile.ToString">
      <summary>
            Override of ToString that returns the file name.
            </summary>
      <returns>The file name.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaFile.FileName">
      <summary>
            Gets the file name of the source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaFile.Duration">
      <summary>
            Gets the duration of the source.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ImageFile.#ctor(System.String)">
      <summary>
            Creates an image input.
            </summary>
      <param name="strFile">
      </param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ImageFile.Duration">
      <summary>
            Gets the image duration (0 for still files).
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ImageFile.ImageSize">
      <summary>
            Size of the image.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ImageFile.FileName">
      <summary>
            Gets the file name.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.JobTemplateArgumentErrorException">
      <summary>
            The exception that is thrown when a preset contains an invalid argument.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobTemplateArgumentErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobTemplateArgumentErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobTemplateArgumentErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobTemplateArgumentErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.JobTemplateArgumentErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.VideoStreamData">
      <summary>
            Video stream data.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.VideoStreamData.VideoSize">
      <summary>
            The video size.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.VideoStreamData.AspectRatio">
      <summary>
            The video aspect ratio.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.VideoStreamData.Duration">
      <summary>
            The stream's duration.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.VideoStreamData.FrameRate">
      <summary>
            The frame rate of the stream (0 if unknown).
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.VideoStreamData.Interlaced">
      <summary>
            Gets a value indicating whether the stream is interlaced.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.VideoStreamData.DefaultStream">
      <summary>
            Gets a value indicating whether this is the default stream.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.AudioStreamData">
      <summary>
            Audio stream data.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioStreamData.Duration">
      <summary>
            Gets the stream's duration.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioStreamData.Channels">
      <summary>
            Gets the number of channels for this stream.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioStreamData.BitsPerSample">
      <summary>
            Gets the bits per second for this stream.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioStreamData.SampleSize">
      <summary>
            Gets the sample size for this stream.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioStreamData.DefaultStream">
      <summary>
            Gets a value indicating whether this is the default stream.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioStreamData.StreamName">
      <summary>
            Gets the stream name.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.AudioVideoFile">
      <summary>
            An audio/video input.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.AudioVideoFile.#ctor(System.String)">
      <summary>
            Creates a source object.
            </summary>
      <param name="fileName">The file name of the source to create.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.AudioVideoFile.GetThumbnail(System.TimeSpan,System.Drawing.Size)">
      <summary>
            Returns a thumbnail of the frame at the passed time with the passed size.
            </summary>
      <param name="time">The time of the frame that is to be used for the thumbnail.</param>
      <param name="size">The size of the returned thumbnail.</param>
      <returns>The thumbnail.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.AudioVideoFile.CreateThumbnailGenerator(System.Drawing.Size)">
      <summary>
            Create many thumbnails of one size from this file.
            </summary>
      <param name="size">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.AudioVideoFile.CalculateDuration(System.EventHandler{Microsoft.Expression.Encoder.IndexProgressEventArgs})">
      <summary>
            Calculate the duration of a file by going through and creating an index of the file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioVideoFile.FileName">
      <summary>
            Gets the file name.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioVideoFile.Duration">
      <summary>
            Gets the file duration.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioVideoFile.FileSize">
      <summary>
            The file size in bytes.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioVideoFile.VideoStreams">
      <summary>
            Gets the video streams.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioVideoFile.AudioStreams">
      <summary>
            Audio streams.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioVideoFile.Warnings">
      <summary>
            Any import warnings.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioVideoFile.Markers">
      <summary>
            Markers from the file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioVideoFile.ScriptCommands">
      <summary>
            Script commands from the file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.AudioVideoFile.Metadata">
      <summary>
            Metadata from the file.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.AcquireCredentialModes">
      <summary>
            This enum holds the different modes used for authentication
            with the server.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.AcquireCredentialModes.None">
      <summary>
            No flags are set.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.AcquireCredentialModes.Proxy">
      <summary>
            If this flag is set when the AcquireCredentials method is called, 
            it indicates that the credentials are for a proxy server. Applications should not set this flag.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.AcquireCredentialModes.ClearText">
      <summary>
            If this flag is set when the AcquireCredentials method is called, it indicates that the 
            credentials will be sent over the network unencrypted. Applications should not set this flag.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.AcquireCredentialsEventArgs">
      <summary>
            This class holds information for encoding status.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.AcquireCredentialsEventArgs.UserName">
      <summary>
            The user name for the publishing point, if one is required.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.AcquireCredentialsEventArgs.MaxUserNameLength">
      <summary>
            Gets the maximum length of the user name as supported by the server.    
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.AcquireCredentialsEventArgs.Password">
      <summary>
            The password for the publishing point, if one is required.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.AcquireCredentialsEventArgs.MaxPasswordNameLength">
      <summary>
            Gets the maximum length of the password as supported by the server.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.AcquireCredentialsEventArgs.Cancel">
      <summary>
            Is set to true if you want to cancel the credentials request.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.AcquireCredentialsEventArgs.Realm">
      <summary>
            The name of the realm.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.AcquireCredentialsEventArgs.Site">
      <summary>
            The name of the site. The site is the name of the remote server.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.AcquireCredentialsEventArgs.Modes">
      <summary>
            Gets a set of flags used in server authentication. On input, the caller 
            sets whichever flags are relevant. On output, the application should clear 
            the flags that were set by the caller, and set any additional flags as appropriate. 
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.EncodeStatus">
      <summary>
            This class holds information for encoding status.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.PublishingPointLocating">
      <summary>
            The encoder is trying to determine the location of the publishing point.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.PublishingPointConnecting">
      <summary>
            The encoder has begun connecting to the publishing point.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.PublishingPointOpened">
      <summary>
            The encoder successfully connected to and opened the publishing point.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.PublishingPointError">
      <summary>
            The encoder encountered an error when connecting to the publishing point.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.PipelineRebuildStarted">
      <summary>
            The underlying encoding engine has started rebuilding it's media pipeline
            due to changes in either the encoding properties or the number of sources.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.PipelineRebuildFinished">
      <summary>
            The underlying encoding engine has finished rebuilding it's media pipeline.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.AnalyzingFile">
      <summary>
            The engine is analyzing a file for use as a file source.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.Jumped">
      <summary>
            The encoder has jumped to a new source. The sender of this event will
            be the source that is jumped to.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.Looped">
      <summary>
            The encoder has looped the current source. The sender of this event will
            be the source that is looped.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.Hold">
      <summary>
            The encoder is holding the current source. The sender of this event will
            be the source that is held.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.EncodingError">
      <summary>
            An error occurred while encoding and the current job will be stopped.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.EncodeStatus.StreamingStarted">
      <summary>
            Streaming to a publishing point has started.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.EncodeStatusEventArgs">
      <summary>
            This class holds information for encoding status.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.EncodeStatusEventArgs.Status">
      <summary>
            Gets the status related to this event.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.EncodeStatusEventArgs.Message">
      <summary>
            Gets a message related to this status, if one exists.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.EncodeStatusEventArgs.LiveSource">
      <summary>
            Gets the device that sent this message. If this status
            message is related to jumping, looping, or holding a device,
            this parameter is the device that performed the action.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.FileArchivePublishFormat">
      <summary>
            Class that represents a file archive.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.PublishFormat">
      <summary>
            Base class for a live publishing format.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.FileArchivePublishFormat.#ctor">
      <summary>
            Initializes a new instance of the FileArchivePublishFormat class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.FileArchivePublishFormat.#ctor(System.String)">
      <summary>
            Initializes a new instance of the FileArchivePublishFormat class.
            </summary>
      <param name="fileName">The name of the output file.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.FileArchivePublishFormat.OutputFileName">
      <summary>
            Gets or sets the file name that is being published to, if publishing to a file archive.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.PreviewWindow">
      <summary>
            This class represents a window used for previewing the output of 
            an encoding session or the input of a device.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.PreviewWindow.#ctor(System.Runtime.InteropServices.HandleRef)">
      <summary>
            Initializes a new instance of the PreviewWindow class.
            </summary>
      <param name="parentWindow">The parent window for this preview window.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.PreviewWindow.SetSize(System.Drawing.Size)">
      <summary>
            Sets the size of this preview window.
            </summary>
      <param name="size">The new size of this preview window.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.PreviewWindow.Dispose">
      <summary>
            IDisposable finalizer. This cleans up the internal implementation class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.PreviewWindow.Dispose(System.Boolean)">
      <summary>
            IDisposable finalizer
            </summary>
      <param name="disposing">False cleans up only managed memory, true cleans up both managed and unmanaged memory.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.PreviewWindow.ChildWindow">
      <summary>
            Gets the child window created for this preview window.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.PreviewWindow.Visible">
      <summary>
            Gets or sets the visibility of this preview window.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Devices.EncoderDevice">
      <summary>
            This class represents an audio or a video device that is installed on the system.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Devices.EncoderDevice.Dispose">
      <summary>
            IDisposable finalizer. This cleans up the internal implementation class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Devices.EncoderDevice.Dispose(System.Boolean)">
      <summary>
            IDisposable finalizer.
            </summary>
      <param name="disposing">When false, cleans up only managed. When true, cleans up both.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Devices.EncoderDevice.Name">
      <summary>
            Gets the name of this device.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Devices.EncoderDevice.DevicePath">
      <summary>
            Gets the device path for this device. The device path is a unique identifier to help
            distinguish between two or more instances of the same type of device on a system.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.LiveDeviceSource">
      <summary>
            This class represents an audio and/or video device that is
            used as a source in the live encoder.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.LiveSource">
      <summary>
            This class represents a generic source that can be used in live encoding.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveSource.Dispose">
      <summary>
            IDisposable finalizer. This cleans up the internal implementation class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveSource.Dispose(System.Boolean)">
      <summary>
            IDisposable finalizer.
            </summary>
      <param name="disposing">When false, cleans up only managed. When true, cleans up both.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveSource.SourcePropertiesSnapshot">
      <summary>
            Gets a snapshot of the source properties.
            </summary>
      <returns>The source properties.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveSource.Id">
      <summary>
            Gets a unique ID for this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveSource.IsActive">
      <summary>
            Gets a value indicating whether this source is currently active.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveSource.ResizeMode">
      <summary>
            Gets or sets the resize mode of this source.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveDeviceSource.SourcePropertiesSnapshot">
      <summary>
            Gets properties describing this source, including things like frame rate, resolution, and so on.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveDeviceSource.PickBestVideoFormat(System.Drawing.Size,System.Int64)">
      <summary>
            Attempts to select the best size for the video device that matches the given settings.
            </summary>
      <param name="targetSize">The target size to try to match.</param>
      <param name="frameDuration">The target frame duration to try to match, in 100 nano-second units.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveDeviceSource.ShowConfigurationDialog(Microsoft.Expression.Encoder.Live.ConfigurationDialog,System.Runtime.InteropServices.HandleRef)">
      <summary>
            Displays the configuration dialog box for this device.
            </summary>
      <param name="dialog">The dialog box to show.</param>
      <param name="parentWindow">The parent window of this dialog box.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveDeviceSource.IsDialogSupported(Microsoft.Expression.Encoder.Live.ConfigurationDialog)">
      <summary>
            Checks to see if a dialog box is supported.
            </summary>
      <param name="dialog">The dialog box to check.</param>
      <returns>True if the given dialog box is supported on this device.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveDeviceSource.GetSupportedConfigurationDialogs">
      <summary>
            Gets an array of all the configuration dialog boxes supported by this device.
            </summary>
      <returns>An array of the supported configuration dialog boxes, or null if none exist.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveDeviceSource.SetTransportMode(Microsoft.Expression.Encoder.Live.TransportMode)">
      <summary>
            Sets the transport mode if this source supports it.
            </summary>
      <param name="mode">The new transport mode.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveDeviceSource.VideoDevice">
      <summary>
            Gets or sets the video device used in this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveDeviceSource.AudioDevice">
      <summary>
            Gets or sets the audio device used in this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveDeviceSource.PreviewWindow">
      <summary>
            The preview window used for monitoring this device.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveDeviceSource.SupportsTransportControls">
      <summary>
            Gets a value indicating whether this source supports DV and VCR-type transport controls.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.LiveFileSource">
      <summary>
            This class represents a file that is used as a source in the
            live encoder.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveFileSource.SourcePropertiesSnapshot">
      <summary>
            Gets properties describing this source, including things like frame rate, resolution, and so on.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.Name">
      <summary>
            Gets the name of the file that is used in this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.FullName">
      <summary>
            Gets the fully qualified path name of the file that is used in this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.Path">
      <summary>
            Gets the path of the file that is used in this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.AspectRatio">
      <summary>
            Gets the aspect ratio of the source file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.Duration">
      <summary>
            Gets the duration of the file that is used in this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.Size">
      <summary>
            Gets the size of this source. Only valid on video sources.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.FrameRate">
      <summary>
            Gets the frame rate of this source
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.IsImage">
      <summary>
            Gets a flag indicating whether this file source is an image.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.IsAudioOnly">
      <summary>
            Gets a flag indicating whether this is an audio-only file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.PlaybackMode">
      <summary>
            Gets or sets the playback mode of this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveFileSource.JumpTo">
      <summary>
            Gets or sets the source that will be switched to
            after this source has finished playback.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.PullBroadcastPublishFormat">
      <summary>
            Class that represents a pull broadcast.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.PullBroadcastPublishFormat.BroadcastPort">
      <summary>
            The port to broadcast on.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.PullBroadcastPublishFormat.MaximumNumberOfConnections">
      <summary>
             The maximum number of connections this computer can handle.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.PushBroadcastPublishFormat">
      <summary>
            Class that represents a push broadcast.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.PushBroadcastPublishFormat.PublishingPoint">
      <summary>
             Gets or sets the URI of the Windows Media server that is being published to.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.PushBroadcastPublishFormat.UserName">
      <summary>
            Gets or sets the user name for the publishing point, if one is required.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.PushBroadcastPublishFormat.Password">
      <summary>
            Gets or sets the password for the publishing point, if one is required. This is
            not persisted in the job file for privacy reasons.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.ScriptCommand">
      <summary>
            Represents an on-demand script command in Live Encoding.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.ScriptCommand.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the script command class.
            </summary>
      <param name="type">The type of this command.</param>
      <param name="command">The command to perform.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.ScriptCommand.CommandType">
      <summary>
            The type of this script command.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.ScriptCommand.Command">
      <summary>
            The command to perform for this script command.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.Sensitivity">
      <summary>
            Defines sensitivities for the sample dropping logic.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.Sensitivity.None">
      <summary>
            Never drop any samples. Not recommended, as the internal encoding buffer
            can quickly grow unmanageable.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.Sensitivity.Normal">
      <summary>
            Drops samples according to the size of the encoding buffer window. This is
            the default sensitivity.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.Sensitivity.Conservative">
      <summary>
            Drops samples according to 3/2 the size of the encoding buffer window.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Live.Sensitivity.Aggressive">
      <summary>
            Drops samples according to 1/2 the size of the encoding buffer window.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.ServerStatistics">
      <summary>
            This class holds information about a Windows Media streaming server.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.ServerStatistics.ServerCpu">
      <summary>
            Gets the CPU utilization of the computer on which the server is running.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.ServerStatistics.LastCounterReset">
      <summary>
            Gets the date and time at which the Windows Media server was started.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.ServerStatistics.TotalConnections">
      <summary>
            Gets the total number of players connected to the server since the last reset.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.ServerStatistics.ConnectionLimit">
      <summary>
            Gets the largest number of players that can be simultaneously connected to the server.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.ServerStatistics.PeakConnections">
      <summary>
            Gets the maximum number of players that have simultaneously connected to the server since the last reset.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.ServerStatistics.CurrentConnections">
      <summary>
            Gets the number of players connected to the server.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.ServerStatistics.BandwidthLimit">
      <summary>
            Gets the maximum total player bandwidth permitted by the server.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.ServerStatistics.PeakBandwidth">
      <summary>
            Gets the maximum bandwidth allocated to player connections since the last reset.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.SourceProperties">
      <summary>
            Describes properties of a LiveSource.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.SourceProperties.Size">
      <summary>
            Gets the size of the video for this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.SourceProperties.FrameRate">
      <summary>
            Gets the frame rate of the video for this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.SourceProperties.TotalFrames">
      <summary>
            Gets the total number of video frames for this source. If it's a file source,
            this equals the duration. If it's a device source, this equals the total number
            of frames sent by the driver.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.SourceProperties.FramesDropped">
      <summary>
            Gets the number of frames dropped by the driver of this source. File
            sources never drop frames at the driver level.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.SourceProperties.SampleRate">
      <summary>
            Gets the sample rate of the audio for this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.SourceProperties.Channels">
      <summary>
            Gets the number of channels in the audio for this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.SourceProperties.SamplesDropped">
      <summary>
            Gets the number of audio samples dropped by this source.
            File sources never drop audio samples.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.MP4OutputFormat">
      <summary>
            Used to specify that the MP4 format should be used as the output encoding format.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.OutputFormat">
      <summary>
            The base class used to specify the output format.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.OutputFormat.AudioProfile">
      <summary>
            Gets or sets the audio profile used to encode the audio.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.OutputFormat.VideoProfile">
      <summary>
            Gets or sets the video profile used to encode the video.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MP4OutputFormat.#ctor">
      <summary>
            Initializes a new instance of the MP4OutputFormat class.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MP4OutputFormat.StreamCompatibility">
      <summary>
            Gets or sets the MP4 Stream compatibility mode
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MP4OutputFormat.VideoProfile">
      <summary>
            Gets or sets the video profile used to encode the video.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MP4OutputFormat.AudioProfile">
      <summary>
            Gets or sets the audio profile used to encode the audio.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.InvalidOperationErrorException">
      <summary>
            Invalid operation error.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidOperationErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidOperationErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidOperationErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidOperationErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidOperationErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.OutputMode">
      <summary>
            Specifies the format of the output file.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.OutputMode.SingleFile">
      <summary>
            Multiple bitrates are stored in a single output file.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.OutputMode.FilePerStream">
      <summary>
            Each bitrate is stored in a separate file.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.OutputMode.SmoothStreamingMultipleFile">
      <summary>
            Each bitrate is stored in a separate file. Used for IIS Smooth Streaming.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Preset">
      <summary>
            The class that represents a preset on disk.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Preset.FindPreset(System.String)">
      <summary>
            Searches system presets for matching, based on exact name, and using the current locale.
            </summary>
      <param name="name">Name to search for.</param>
      <returns>A preset object with a name that matches the search.</returns>
      <exception cref="T:Microsoft.Expression.Encoder.PresetNotFoundException">Thrown if the profile cannot be found.</exception>
      <exception cref="T:System.ArgumentNullException">Thrown if a null or empty string is passed as a parameter.</exception>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Preset.FindPresets(System.Func{Microsoft.Expression.Encoder.Preset,System.Boolean})">
      <summary>
            Returns matching system presets based on the search predicate.
            </summary>
      <param name="predicate">Lambda search expression.</param>
      <returns>
      </returns>
      <exception cref="T:System.ArgumentNullException">Thrown if the profile cannot be found.</exception>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Preset.FromFile(System.String)">
      <summary>
            Load a preset from a file.
            </summary>
      <param name="strFilePath">Path of the preset file.</param>
      <returns>A preset object.</returns>
      <exception cref="T:System.ArgumentNullException">Thrown if the profile cannot be found.</exception>
      <exception cref="T:System.ArgumentException">Thrown if the parameter contains a path that does not resolve to a valid file.</exception>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.IsWebVideo">
      <summary>
            Indicates if a system encoding-preset targets web video rather than devices.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.Name">
      <summary>
            The name of the preset.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.Path">
      <summary>
            The path of the preset file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.IsSystem">
      <summary>
            Indicates whether this preset instance is a system preset.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.IsPrx">
      <summary>
            Indicates whether this preset is a PRX profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.IsLivePreset">
      <summary>
            Indicates whether this preset is a Live-only preset.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.Description">
      <summary>
            Returns a string describing the contents.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.IsSmoothStreaming">
      <summary>
            A flag indicating whether the preset uses IIS Smooth Streaming.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.HasAudioProfile">
      <summary>
            A flag indicating whether the preset has audio profile information.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.HasAudioSourceProfile">
      <summary>
            A flag indicating whether the preset uses a source profile for the audio profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.HasVideoProfile">
      <summary>
            A flag indicating whether the preset has video profile information.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.HasVideoSourceProfile">
      <summary>
            A flag indicating whether the preset uses a source profile for the video profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.VideoCodec">
      <summary>
            For presets containing a video profile, returns the video codec.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.AudioCodec">
      <summary>
            For presets containing an audio profile, returns the audio codec.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.SystemPresets">
      <summary>
            Enumerates all system presets.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Preset.SystemLivePresets">
      <summary>
            Enumerates all system Live presets.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1256kDSL4x3">
      <summary>
            Returns the preset "VC-1 256k DSL," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: 320, 240. Video Bitrate: 150 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA Audio. Channels: Stereo. Audio Bitrate: 32 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1256kDSL16x9">
      <summary>
            Returns the preset "VC-1 256k DSL," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: 320, 180. Video Bitrate: 150 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA Audio. Channels: Stereo. Audio Bitrate: 32 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1512kDSL16x9">
      <summary>
            Returns the preset "VC-1 512k DSL," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: 320, 180. Video Bitrate: 350 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA Audio. Channels: Stereo. Audio Bitrate: 48 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1512kDSL4x3">
      <summary>
            Returns the preset "VC-1 512k DSL," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: 320, 240. Video Bitrate: 350 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA Audio. Channels: Stereo. Audio Bitrate: 48 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1Broadband16x9">
      <summary>
            Returns the preset "VC-1 Broadband," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: 512, 288. Video Bitrate: 1000 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA Audio. Channels: Stereo. Audio Bitrate: 64 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1Broadband4x3">
      <summary>
            Returns the preset "VC-1 Broadband," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: 512, 384. Video Bitrate: 1000 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA Audio. Channels: Stereo. Audio Bitrate: 64 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1HighSpeedBroadband4x3">
      <summary>
            Returns the preset "VC-1 High Speed Broadband," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: 640, 480. Video Bitrate: 1500 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA Audio. Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1HighSpeedBroadband16x9">
      <summary>
            Returns the preset "VC-1 High Speed Broadband," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: 640, 360. Video Bitrate: 1500 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1IISSmoothStreamingLowBandwidthStandard">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming Low Bandwidth" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1IISSmoothStreaming480pStandard">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming 480p" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1IISSmoothStreaming720pStandard">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming 720p" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1IISSmoothStreamingLowBandwidthWidescreen">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming Low Bandwidth" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1IISSmoothStreaming480pWidescreen">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming 480p" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.VC1IISSmoothStreaming720pWidescreen">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming 720p" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingLowBandwidthStandard">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming Low Bandwidth" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreaming480pStandard">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming 480p" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreaming720pStandard">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming 720p" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingiPhoneCellStandard">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming iPhone Cell" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingiPhoneWifiStandard">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming iPhone Wifi" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingiPadCellStandard">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming iPad Cell" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingiPadWifiStandard">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming iPad Wifi" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingSymbianStandard">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming Symbian" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingLowBandwidthWidescreen">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming Low Bandwidth" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreaming480pWidescreen">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming 480p" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreaming720pWidescreen">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming 720p" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingiPhoneCellWidescreen">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming iPhone Cell" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingiPhoneWifiWidescreen">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming iPhone Wifi" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingiPadCellWidescreen">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming iPad Cell" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingiPadWifiWidescreen">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming iPad Wifi" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.LivePresets.H264IISSmoothStreamingSymbianWidescreen">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming Symbian" and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: H264 Advanced Profile. Streams: 3. Stream auto-sizing: No. Video size: Auto, 320. Video Bitrate: 1024 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.AACGoodQualityAudio">
      <summary>
            Returns the preset "AAC Good Quality Audio," and applies the settings that follow. Output Format: MP4. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.AACHighQualityAudio">
      <summary>
            Returns the preset "AAC High Quality Audio," and applies the settings that follow. Output Format: MP4. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.AACLowQualityAudio">
      <summary>
            Returns the preset "AAC Low Quality Audio," and applies the settings that follow. Output Format: MP4. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.Balanced">
      <summary>
            Returns a preset instance that applies settings that correspond to: Balanced with settings. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.BestQuality">
      <summary>
            Returns a preset instance that applies settings that correspond to: Best Quality with settings. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.ExpressionBumper">
      <summary>
            Returns a preset instance that applies settings that correspond to: Expression Bumper with settings. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.Fastest">
      <summary>
            Returns a preset instance that applies settings that correspond to: Fastest with settings. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264256kDSLCBR">
      <summary>
            Returns the preset "H.264 256k DSL CBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 180. Video Bitrate: 192 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264256kDSLVBR">
      <summary>
            Returns the preset "H.264 256k DSL VBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 180. Video Bitrate: 192, 288 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264512kDSLCBR">
      <summary>
            Returns the preset "H.264 512k DSL CBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 240. Video Bitrate: 404 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264512kDSLVBR">
      <summary>
            Returns the preset "H.264 512k DSL VBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 240. Video Bitrate: 404, 606 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264AppleTV">
      <summary>
            Returns the preset "H.264 AppleTV," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: 1280, Auto. Video Bitrate: 5000 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264IISiPhoneWiFi">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming iPhone Wifi," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: 480, 320. Video Bitrate: 700 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 64 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264IISiPhoneCell">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming iPhone Cell,"  and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: 480, 320. Video Bitrate: 200 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 64 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264IISSymbian">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming Symbian," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: 480, 320. Video Bitrate: 700 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 64 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264BroadbandCBR">
      <summary>
            Returns the preset "H.264 Broadband CBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 384. Video Bitrate: 1045 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264BroadbandVBR">
      <summary>
            Returns the preset "H.264 Broadband VBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 384. Video Bitrate: 1045, 1568 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264FacebookHD">
      <summary>
            Returns the preset "H.264 Facebook HD," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: 1280, 720. Video Bitrate: 2500 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264FacebookSD">
      <summary>
            Returns the preset "H.264 Facebook SD," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: 608, 456. Video Bitrate: 1250 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264HD1080pVBR">
      <summary>
            Returns the preset "H.264 HD 1080p VBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 1080. Video Bitrate: 9515, 14273 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264HD720pVBR">
      <summary>
            Returns the preset "H.264 HD 720p VBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 720. Video Bitrate: 4018, 6027 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264HighSpeedBroadbandCBR">
      <summary>
            Returns the preset "H.264 High Speed Broadband CBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 480. Video Bitrate: 1632 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264HighSpeedBroadbandVBR">
      <summary>
            Returns the preset "H.264 High Speed Broadband VBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 480. Video Bitrate: 1632, 2448 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264IISSmoothStreaming480pCBR">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming - 480p CBR," and applies the settings that follow. Output Format: MP4. Container: Smooth Streaming. Video Codec: H.264 - Main Streams: 8 Stream auto-sizing: No. Video size: Auto, 480. Video Bitrate: 1644 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264IISSmoothStreaming720pCBR">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming - 720p CBR," and applies the settings that follow. Output Format: MP4. Container: Smooth Streaming. Video Codec: H.264 - Main Streams: 8 Stream auto-sizing: No. Video size: Auto, 720. Video Bitrate: 2962 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264IISSmoothStreamingHD1080pCBR">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming - 1080p CBR," and applies the settings that follow. Output Format: MP4. Container: Smooth Streaming. Video Codec: H.264 - Main Streams: 8 Stream auto-sizing: No. Video size: Auto, 1080. Video Bitrate: 6000 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264IISSmoothStreamingScreenEncodingCBR">
      <summary>
            Returns the preset "H.264 IIS Smooth Streaming - Screen Encoding CBR," and applies the settings that follow. Output Format: MP4. Container: Smooth Streaming. Video Codec: H.264 - Main Streams: 8 Stream auto-sizing: No. Video size: Auto, 720. Video Bitrate: 1481 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264iPhoneiPodTouch">
      <summary>
            Returns the preset "H.264 iPhone / iPod Touch," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Baseline. Video size: 480, Auto. Video Bitrate: 1500 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264SilverlightForSymbian">
      <summary>
            Returns the preset "H.264 Silverlight for Symbian," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Baseline. Video size: 320, 180. Video Bitrate: 384 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 56 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264SonyPSP">
      <summary>
            Returns the preset "H.264 Sony PSP," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Baseline. Video size: 480, 272. Video Bitrate: 700 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264iPodClassicNano">
      <summary>
            Returns the preset "H.264 iPod Classic / Nano," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Baseline. Video size: 320, Auto. Video Bitrate: 1000 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264iPad">
      <summary>
            Returns the preset "H.264 iPad," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Baseline. Video size: 1280, 720. Video Bitrate: 4018 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264MotionThumbnailVBR">
      <summary>
            Returns the preset "H.264 Motion Thumbnail VBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 120. Video Bitrate: 110, 165 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264ScreenEncodingVBR">
      <summary>
            Returns the preset "H.264 Screen Encoding VBR," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: Auto, 768. Video Bitrate: 1332, 4569 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264VimeoHD">
      <summary>
            Returns the preset "H.264 Vimeo HD," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: 1280, 720. Video Bitrate: 5000 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264VimeoSD">
      <summary>
            Returns the preset "H.264 Vimeo SD," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: 640, 480. Video Bitrate: 2500 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264YouTubeHD">
      <summary>
            Returns the preset "H.264 YouTube HD," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: 1280, 720. Video Bitrate: 1995 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264YouTubeSD">
      <summary>
            Returns the preset "H.264 YouTube SD," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Main. Video size: 320, 240. Video Bitrate: 512 Kbps. Video Encoding: CBR SinglePass. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264Zune2">
      <summary>
            Returns the preset "H.264 Zune 2," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Baseline. Video size: 320, Auto. Video Bitrate: 1000, 3000 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264Zune2AVDockPlayback">
      <summary>
            Returns the preset "H.264 Zune 2 (AV Dock Playback)," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Baseline. Video size: 640, Auto. Video Bitrate: 2000, 3000 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264ZuneHD">
      <summary>
            Returns the preset "H.264 Zune HD," and applies the settings that follow. Output Format: MP4. Video Codec: H.264 - Baseline. Video size: 480, Auto. Video Bitrate: 1500, 3000 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.H264ZuneHDAVDockPlayback">
      <summary>
            Returns the preset "H.264 Zune HD (AV Dock Playback)," and applies the settings that follow. Output Format: MP4. Container: MP4. Video Codec: H.264 - Baseline. Video size: 1280, Auto. Video Bitrate: 6100, 12000 Kbps. Video Encoding: VBR Constrained. Audio Codec: AAC. Audio Channels: Stereo. Audio Bitrate: 192 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.SampleOverlay">
      <summary>
            Returns the preset "Sample Overlay," and applies the setting that follows. Video Overlay: eeo.xaml.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.SilverlightTrailer">
      <summary>
            Returns a preset instance that applies settings that correspond to: Silverlight Trailer with settings. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1256kDSLCBR">
      <summary>
            Returns the preset "VC-1 256k DSL CBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 180. Video Bitrate: 192 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 64 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1256kDSLVBR">
      <summary>
            Returns the preset "VC-1 256k DSL VBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 180. Video Bitrate: 192, 288 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 48,72 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1512kDSLCBR">
      <summary>
            Returns the preset "VC-1 512k DSL CBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 240. Video Bitrate: 404 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1512kDSLVBR">
      <summary>
            Returns the preset "VC-1 512k DSL VBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 240. Video Bitrate: 404, 606 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 64,96 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1BroadbandCBR">
      <summary>
            Returns the preset "VC-1 Broadband CBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 384. Video Bitrate: 1045 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1BroadbandVBR">
      <summary>
            Returns the preset "VC-1 Broadband VBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 384. Video Bitrate: 1632, 2448 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 128,192 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1HD1080pVBR">
      <summary>
            Returns the preset "VC-1 HD 1080p VBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 1080. Video Bitrate: 9515, 14273 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 384,576 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1HD720pVBR">
      <summary>
            Returns the preset "VC-1 HD 720p VBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 720. Video Bitrate: 4018, 6027 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 192,288 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1HighSpeedBroadbandCBR">
      <summary>
            Returns the preset "VC-1 High Speed Broadband CBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 480. Video Bitrate: 1632 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1HighSpeedBroadbandVBR">
      <summary>
            Returns the preset "VC-1 High Speed Broadband VBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 480. Video Bitrate: 1632, 2448 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 192,288 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1IISSmoothStreaming720pCBR">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming - 720p CBR," and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 8. Stream auto-sizing: No. Video size: Auto, 720. Video Bitrate: 2962 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1IISSmoothStreamingHD1080pVBR">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming - HD 1080p VBR," and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 13. Stream auto-sizing: Yes. Video size: Auto, 1080. Video Bitrate: 10000, 18000 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 128,192 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1IISSmoothStreamingHD720pVBR">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming - HD 720p VBR," and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 10. Stream auto-sizing: Yes. Video size: Auto, 720. Video Bitrate: 4000, 8000 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 128,192 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1IISSmoothStreamingScreenEncodingVBR">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming - Screen Encoding VBR," and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 8. Stream auto-sizing: Yes. Video size: Auto, Auto. Video Bitrate: 1000, 2940 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 128,192 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1IISSmoothStreamingSD480pVBR">
      <summary>
            Returns the preset "VC-1 IIS Smooth Streaming - SD 480p VBR," and applies the settings that follow. Output Format: Windows Media. Container: Smooth Streaming. Video Codec: VC-1 Advanced Profile. Streams: 8. Stream auto-sizing: Yes. Video size: Auto, 480. Video Bitrate: 1644, 2466 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 128,192 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1MotionThumbnailVBR">
      <summary>
            Returns the preset "VC-1 Motion Thumbnail VBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 120. Video Bitrate: 110, 165 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 48,72 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1ScreenEncodingVBR">
      <summary>
            Returns the preset "VC-1 Screen Encoding VBR," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Advanced Profile. Video size: Auto, 768. Video Bitrate: 1332, 4569 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 128,192 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1WindowsMobile">
      <summary>
            Returns the preset "VC-1 Windows Mobile," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Simple Profile. Video size: 240, Auto. Video Bitrate: 350 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: Mono. Audio Bitrate: 48 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1Xbox360HD1080p">
      <summary>
            Returns the preset "VC-1 Xbox 360 HD 1080p," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Main Profile. Video size: 1920, 1080. Video Bitrate: 8000 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 384 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1Xbox360HD720p">
      <summary>
            Returns the preset "VC-1 Xbox 360 HD 720p," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Main Profile. Video size: 1280, 720. Video Bitrate: 6000 Kbps. Video Encoding: CBR SinglePass. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 384 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1Zune1">
      <summary>
            Returns the preset "VC-1 Zune 1," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Main Profile. Video size: 320, Auto. Video Bitrate: 1000, 1500 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 128,192 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1Zune2">
      <summary>
            Returns the preset "VC-1 Zune 2," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Main Profile. Video size: 320, Auto. Video Bitrate: 1000, 3000 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 128,192 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1Zune2AVDockPlayback">
      <summary>
            Returns the preset "VC-1 Zune 2 (AV Dock Playback)," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Main Profile. Video size: 640, Auto. Video Bitrate: 2000, 3000 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 128,192 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1ZuneHD">
      <summary>
            Returns the preset "VC-1 Zune HD," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Main Profile. Video size: 480, Auto. Video Bitrate: 1500, 3000 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 192,288 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.VC1ZuneHDAVDockPlayback">
      <summary>
            Returns the preset "VC-1 Zune HD (AV Dock Playback)," and applies the settings that follow. Output Format: Windows Media. Container: WMV. Video Codec: VC-1 Main Profile. Video size: 1280, Auto. Video Bitrate: 6100, 12000 Kbps. Video Encoding: VBR Constrained. Audio Codec: WMA. Audio Channels: 5.1. Audio Bitrate: 128,576 Kbps. Audio Encoding: VBR Constrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.WMABestQualityVBR">
      <summary>
            Returns the preset "WMA Best Quality VBR," and applies the settings that follow. Output Format: Windows Media. Audio Codec: WMA. Audio Channels: Stereo. Audio Encoding: Quality VBR. Audio Quality: 90.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.WMAGoodQualityAudio">
      <summary>
            Returns the preset "WMA Good Quality Audio," and applies the settings that follow. Output Format: Windows Media. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 96 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.WMAHighQualityAudio">
      <summary>
            Returns the preset "WMA High Quality Audio," and applies the settings that follow. Output Format: Windows Media. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 160 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.WMALossless51Audio">
      <summary>
            Returns the preset "WMA Lossless 5.1 Audio," and applies the settings that follow. Output Format: Windows Media. Audio Codec: WMA. Audio Channels: 5.1. Audio Encoding: Quality VBR. Audio Quality: 100.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.WMALowQualityAudio">
      <summary>
            Returns the preset "WMA Low Quality Audio," and applies the settings that follow. Output Format: Windows Media. Audio Codec: WMA. Audio Channels: Stereo. Audio Bitrate: 64 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.WMAVoiceAudio">
      <summary>
            Returns the preset "WMA Voice Audio," and applies the settings that follow. Output Format: Windows Media. Audio Codec: WMA. Audio Channels: Mono. Audio Bitrate: 16 Kbps. Audio Encoding: CBR Single Pass.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Presets.SourceProfile">
      <summary>
            Returns the preset "WMA Voice Audio," and applies the setting that follows. Output Format: Apply source profile as encoding profile.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.PresetNotFoundException">
      <summary>
            The exception that is thrown when a preset can't be found.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.PresetNotFoundException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.PresetNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.PresetNotFoundException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.PresetNotFoundException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.AacAudioProfile">
      <summary>
            A class that represents an AAC Audio profile.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.AudioProfile">
      <summary>
            The base class for audio profiles.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.AudioProfile.#ctor">
      <summary>
            Initializes a new instance of the AudioProfile class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.AudioProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AudioProfile.Codec">
      <summary>
            Gets or sets the value of the audio codec that this profile uses.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AudioProfile.Channels">
      <summary>
            Gets or sets the number of channels for this profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AudioProfile.BitsPerSample">
      <summary>
            Gets or sets the number of bits in each sample for this profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AudioProfile.SamplesPerSecond">
      <summary>
            Gets or sets the number of samples per second for this profile.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.AacAudioProfile.#ctor">
      <summary>
            Initializes a new instance of the AacAudioProfile class. 
            It defaults to 160 Kbps
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.AacAudioProfile.#ctor(Microsoft.Expression.Encoder.Profiles.Bitrate,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the AacAudioProfile class.
            </summary>
      <param name="bitrate">The bitrate to use to initialize the class.</param>
      <param name="channels">The channels to use to initialize the class.</param>
      <param name="samplesPerSecond">The samples per second to use to initialize the class.</param>
      <param name="bitsPerSample">The bits per sample to use to initialize the class.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.AacAudioProfile.#ctor(Microsoft.Expression.Encoder.Profiles.AacAudioProfile)">
      <summary>
            Initializes a new instance of the AacAudioProfile class.
            </summary>
      <param name="profile">The profile to use to initialize this class.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.AacAudioProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AacAudioProfile.Bitrate">
      <summary>
            Gets or sets the bitrate to use when encoding.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AacAudioProfile.Codec">
      <summary>
            Gets or sets the value of the audio codec that this profile uses.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AacAudioProfile.Channels">
      <summary>
            Gets or sets the number of channels for this profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AacAudioProfile.BitsPerSample">
      <summary>
            Gets or sets the number of bits in each sample for this profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AacAudioProfile.SamplesPerSecond">
      <summary>
            Gets or sets the number of samples per second for this profile.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.AdvancedVC1VideoProfile">
      <summary>
            Is used to specify the advanced VC1 video profile.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.MainVC1VideoProfile">
      <summary>
            Is used to specify the main VC1 video profile.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile">
      <summary>
            Is used to specify the simple VC1 video profile.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.VC1VideoProfile">
      <summary>
            The base class for VC1 video profiles.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VC1VideoProfile.#ctor">
      <summary>
            Initializes a new instance of the SimpleVC1VideoProfile class.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VC1VideoProfile.Complexity">
      <summary>
            Gets or sets the complexity level. The range is Fastest to Best. A value of Fastest offers the best performance.
            A value of Best offers the best quality.
            Recommendation: For offline encoding, use Normal for a good balance of quality and encoding speed.
            Lower values produce much lower quality and higher values may result in much longer encoding time with only small improvements in quality.
            For live encoding, use the highest value that does not drop frames.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.#ctor">
      <summary>
            Initializes a new instance of the SimpleVC1VideoProfile class
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.SmoothStreaming">
      <summary>
            Gets or sets a value indicating whether the profile uses smooth streaming.
            Note that if you're using VC-1, setting this property to true will cause the following properties to be set as follows.
            ClosedGop to true, AdaptiveGop to false, and OutputMode to
            ElementaryStreamSequenceHeader.  When using Smooth Streaming, the bitrate of each stream must
            either be all ConstantBitrate or all VariableConstrainedBitrate.
            When using H264, setting this property to true will cause SceneChangeDetector to be set to false
            </summary>
      <remarks>Note that when using smooth streaming with a VariableConstrainedBitrate the following properties are ignored, 
            as they are set automatically when encoding.
            AdaptiveDeadZone, BFrameCount, Complexity, DenoiseFilter, DifferentialQuantization, InLoopFilter, 
            MotionChromaSearch, MotionMatchMethod, MotionSearchRange, NoiseEdgeRemovalFilter, OverlapSmoothingFilter,
            SceneChangeDetector
            </remarks>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.AdaptiveDeadZone">
      <summary>
            Gets or sets the adaptive dead zone setting.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.AdaptiveGop">
      <summary>
            Gets or sets a value indicating whether adaptive GOP behavior is used.
            When you specify true, the encoder resets the GOP at each key frame.
            When you specify false, the encoder maintains a regular key frame cadence, but the encoder may 
            still insert extra scene-change key frames.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.ClosedGop">
      <summary>
            Gets or sets a value indicating whether open or closed GOPs are used.
            A closed GOP does not contain frames that depend on adjacent GOPs.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.DenoiseFilter">
      <summary>
            Gets or sets a value indicating whether denoise filtering is turned on.
            The denoise filter is a noise-reduction filter. It can improve the quality of noisy video 
            sources, such as film containing visible grain or video that contains noise as a result 
            of low-light conditions.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.KeyFrameDistance">
      <summary>
            Gets or sets the  key frame distance in seconds.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.MotionChromaSearch">
      <summary>
            Gets or sets the motion chroma search level, which controls whether and how color is used in motion searches.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.MotionMatchMethod">
      <summary>
            Gets or sets the motion match method. SAD provides the best performance. Hadamard provides the best quality.
            Macroblock adaptive configures the codec to make decisions about which method to use on each 
            macroblock. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.NoiseEdgeRemovalFilter">
      <summary>
            Gets or sets a value indicating whether noise edge filtering is turned on.
            The noise edge removal filter detects noise in frame edges and removes it. 
            The noise edge detection only works only for frame edges that contain three or fewer lines of noise. 
            The filter copies lines adjacent to the noisy lines to complete the frame.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.OverlapSmoothingFilter">
      <summary>
            Gets or sets a value indicating whether overlap-smoothing filtering is turned on.
            The overlap-smoothing filter helps reduce blocking artifacts by smoothing the 
            borders between adjacent macroblocks. This tends to make the image appear softer, 
            but can improve the appearance of low bitrate video that contains many blocking artifacts.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.MotionVectorCost">
      <summary>
            Gets or sets a value used to specify the method used by the codec to estimate 
            the amount of processing required for motion vector coding.
            The codec uses the cost to determine which features will be used in encoding.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.SimpleVC1VideoProfile.Codec">
      <summary>
            Gets the codec type.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.MainVC1VideoProfile.#ctor">
      <summary>
            Initializes a new instance of the MainVC1VideoProfile class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.MainVC1VideoProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.MainVC1VideoProfile.DifferentialQuantization">
      <summary>
            Gets or sets the DifferentialQuantization value for the VideoProfile.
            Differential quantization (DifferentialQuantization) is a form of perceptual optimization where the amount of 
            compression is varied on different parts of the frame. DifferentialQuantization enables macro blocks containing 
            smooth or dark areas to be encoded at a quantizer level lower than the rest of the image, yielding 
            more accurate encoding of details in those macro blocks.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.MainVC1VideoProfile.InLoopFilter">
      <summary>
            Gets or sets a value indicating whether in-loop filtering is turned on. 
            The in-loop filter reduces blocking artifacts during encoding to improve the quality of P-frames and B-frames. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.MainVC1VideoProfile.MotionSearchRange">
      <summary>
            Gets or sets the motion search range, which controls the size of the area the codec will search for an 
            element of a frame that may have moved since a previous frame. Larger search ranges 
            can better detect fast motion, but require more processing time.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.MainVC1VideoProfile.BFrameCount">
      <summary>
            Gets or sets the number of B-frames between key frames.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.AdvancedVC1VideoProfile.#ctor">
      <summary>
            Initializes a new instance of the AdvancedVC1VideoProfile class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.AdvancedVC1VideoProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AdvancedVC1VideoProfile.SmoothStreaming">
      <summary>
            Gets or sets a value indicating whether the profile uses smooth streaming.
            Note that if you're using VC-1, setting this property to true will cause the following properties to be set as follows:
            ClosedGop to be set to true, and OutputMode to ElementaryStreamSequenceHeader. 
            When using Smooth Streaming the bitrate of each stream must
            be either all ConstantBitrate or all VariableConstrainedBitrate.
            When using H264, setting this property to true will cause SceneChangeDetector to be set to false.        
            </summary>
      <remarks>Note that when you are using smooth streaming with a VariableConstrainedBitrate, the following properties are ignored 
            because they are set automatically during encoding:
            AdaptiveDeadZone, BFrameCount, Complexity, DenoiseFilter, DifferentialQuantization, InLoopFilter, 
            MotionChromaSearch, MotionMatchMethod, MotionSearchRange, NoiseEdgeRemovalFilter, OverlapSmoothingFilter,
            and SceneChangeDetector.
            </remarks>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AdvancedVC1VideoProfile.ClosedGop">
      <summary>
            Gets or sets a value indicating whether open or closed GOPs are used.
            A closed GOP does not contain frames that depend on adjacent GOPs.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AdvancedVC1VideoProfile.OutputMode">
      <summary>
            Gets or sets the stream output mode.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.AdvancedVC1VideoProfile.OptimizeForAnimation">
      <summary>
            Gets or sets a value indicating whether the encoding should be optimized for animation.
            Only effective if encoding to smooth streaming with a variable bit rate.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.AudioProfileCollection">
      <summary>
            A collection of audio profiles.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile">
      <summary>
            Specifies the baseline H.264 video profile.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.H264VideoProfile">
      <summary>
            The base class for H264 video profiles.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.H264VideoProfile.#ctor">
      <summary>
            Initializes a new instance of the H264VideoProfile class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.#ctor">
      <summary>
            Initializes a new instance of the BaselineH264VideoProfile class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.RDOptimizationMode">
      <summary>
            Gets or sets a value indicating what RDOptimization mode is on
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.HadamardTransform">
      <summary>
            Gets or sets a value indicating whether Hadamard Transform mode is used.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.SubBlockMotionSearchMode">
      <summary>
            Gets or sets a value indicating what SubBlock Motion Search mode is used
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.MultiReferenceMotionSearchMode">
      <summary>
            Gets or sets a value indicating what MultiReference Motion Search mode is used
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.ReferenceBFrames">
      <summary>
            Gets or sets a value indicating whether ReferenceBFrames is turned on.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.AdaptiveBFrames">
      <summary>
            Gets or sets a value indicating whether sequence complexity determines B-frame placement.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.SceneChangeDetector">
      <summary>
            Gets or sets a value indicating whether key frames will automatically get created when a scene change is detected.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.FastIntraDecisions">
      <summary>
            Gets or sets a value indicating whether to apply faster coding decisions per frame to speed up encoding.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.FastInterDecisions">
      <summary>
            Gets or sets a value indicating whether to apply faster coding decisions across frames to speed up encoding.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.SubPixelMode">
      <summary>
            Gets or sets a value indicating subpixel searching mode. 
            Full depth is quicker but less accurate and Half and Quarter provides the best quality at the cost of encoding time.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.SliceCount">
      <summary>
            Gets or sets a value indicating the number of slices per frame.
            Dividing the frames into more slices improves encoding speed but reduces quality because it prevents searches between slices.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.KeyFrameDistance">
      <summary>
            Gets or sets the key frame distance in seconds.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.InLoopFilter">
      <summary>
            Gets or sets a value indicating whether in-loop filtering is turned on. 
            The in-loop filter reduces blocking artifacts during encoding to improve the quality of P-frames and B-frames. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.MEPartitionLevel">
      <summary>
            Gets or sets the value for the ME Partition Level. This defines the complexity 
            of the ME partition decision for inter-predicted frames. 
            A smaller partition level means higher complexity and usually produces better compression 
            capability (or better quality at the same bitrate).
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.ReferenceFrames">
      <summary>
            Gets or sets the number of reference frames for inter-predicted frames.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.SearchRange">
      <summary>
            Gets or sets the search range in pixels.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.BaselineH264VideoProfile.Codec">
      <summary>
            Gets the codec type.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.Bitrate">
      <summary>
            The base bitrate class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.Bitrate.op_Equality(Microsoft.Expression.Encoder.Profiles.Bitrate,Microsoft.Expression.Encoder.Profiles.Bitrate)">
      <summary>
            Operator override to determine whether two bitrates are equal.
            </summary>
      <param name="a">The first bitrate to compare.</param>
      <param name="b">The second bitrate to compare.</param>
      <returns>true if the first bitrate is equal to the second bitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.Bitrate.op_Inequality(Microsoft.Expression.Encoder.Profiles.Bitrate,Microsoft.Expression.Encoder.Profiles.Bitrate)">
      <summary>
            Operator override to determine whether two bitrates are not equal.
            </summary>
      <param name="a">The first bitrate to compare.</param>
      <param name="b">The second bitrate to compare.</param>
      <returns>True if the first bitrate is not equal to the second bitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.Bitrate.Equals(System.Object)">
      <summary>
            Determines whether the specified bitrate is equal to the current bitrate.
            </summary>
      <param name="obj">The bitrate to compare with the current bitrate.</param>
      <returns>True if the specified bitrate is equal to the current bitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.Bitrate.GetHashCode">
      <summary>
            Serves as a hash function for bitrate.
            </summary>
      <returns>A hash code for the current bitrate.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.Bitrate.BitrateValue">
      <summary>
            Gets the bitrate value. If the bitrate is a quality bitrate, 0 is returned.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.Bitrate.IsTwoPass">
      <summary>
            Gets a value indicating whether two-pass encoding should be performed.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.Bitrate.IsVariableBitrate">
      <summary>
            Gets a value indicating whether the bitrate is variable (true) 
            or constant (false).
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.ConstantBitrate">
      <summary>
            Used to specify a constant bitrate.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the ConstantBitrate class.
            </summary>
      <param name="bitrate">The bitrate to use, in Kbps.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.#ctor(System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the ConstantBitrate class.
            </summary>
      <param name="bitrate">The bitrate to use, in Kbps.</param>
      <param name="twoPassEncoding">Whether two-pass encoding should be used.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.#ctor(System.Int32,System.Boolean,System.TimeSpan)">
      <summary>
            Initializes a new instance of the ConstantBitrate class.
            </summary>
      <param name="bitrate">The bitrate to use, in Kbps.</param>
      <param name="twoPassEncoding">Whether two-pass encoding should be used.</param>
      <param name="bufferWindow">The size of the buffer window </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.op_Equality(Microsoft.Expression.Encoder.Profiles.ConstantBitrate,Microsoft.Expression.Encoder.Profiles.ConstantBitrate)">
      <summary>
            Operator override to determine whether two ConstantBitrates are equal.
            </summary>
      <param name="a">The first ConstantBitrate to compare.</param>
      <param name="b">The second ConstantBitrate to compare.</param>
      <returns>True if the first ConstantBitrate is equal to the second ConstantBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.op_Inequality(Microsoft.Expression.Encoder.Profiles.ConstantBitrate,Microsoft.Expression.Encoder.Profiles.ConstantBitrate)">
      <summary>
            Operator override to determine whether two ConstantBitrates are not equal.
            </summary>
      <param name="a">The first ConstantBitrate to compare.</param>
      <param name="b">The second ConstantBitrate to compare.</param>
      <returns>True if the first ConstantBitrate is not equal to the second ConstantBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.Equals(System.Object)">
      <summary>
            Determines whether the specified ConstantBitrate is equal to the current ConstantBitrate.
            </summary>
      <param name="obj">The ConstantBitrate to compare with the current ConstantBitrate.</param>
      <returns>True if the specified ConstantBitrate is equal to the current ConstantBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.GetHashCode">
      <summary>
            Serves as a hash function for ConstantBitrate.
            </summary>
      <returns>A hash code for the current bitrate.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.Bitrate">
      <summary>
            Gets the bitrate.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.BitrateValue">
      <summary>
            Gets the bitrate value.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.IsTwoPass">
      <summary>
            Gets a value indicating whether two-pass encoding will be used.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.BufferWindow">
      <summary>
            Gets the size of the video buffer window.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.ConstantBitrate.IsVariableBitrate">
      <summary>
            Gets a value indicating whether the bitrate is variable (true) 
            or constant (false).
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.HighH264VideoProfile">
      <summary>
            Used to specify the high H.264 video profile.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.MainH264VideoProfile">
      <summary>
            Used to specify the main H.264 video profile.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.MainH264VideoProfile.#ctor">
      <summary>
            Initializes a new instance of the MainH264VideoProfile class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.MainH264VideoProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.MainH264VideoProfile.BFrameCount">
      <summary>
            Gets or sets the number of B-frames between key frames.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.MainH264VideoProfile.EntropyMode">
      <summary>
            Gets or sets the value for the entropy encoding mode.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.HighH264VideoProfile.#ctor">
      <summary>
            Initializes a new instance of the HighH264VideoProfile class.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.StreamCollection">
      <summary>
            Is used to specify a list of streams with bitrates and sizes.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ISortableCollection`1">
      <summary>
            Interface used to store a list of markers or script commands.
            </summary>
      <typeparam name="T">The type of object that is being stored.</typeparam>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ISortableCollection">
      <summary>
            Interface used to store a list of markers or script commands.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ISortableCollection.FreezeSort">
      <summary>
            Gets or sets a value indicating whether the list of items should be sorted.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ISortableCollection`1.Item(System.Int32)">
      <summary>
            Returns a value from the collection.
            </summary>
      <param name="index">The index of the value to return.</param>
      <returns>The returned value.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SortableCollection`1.#ctor(Microsoft.Expression.Encoder.EncoderObject)">
      <summary>
            Constructor.
            </summary>
      <param name="parent">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SortableCollection`1.GetEnumerator">
      <summary>
            Adds code to fire an assert if a lock is not held on the UI thread.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SortableCollection`1.Add(`0)">
      <summary>
            Adds an item to the array.
            </summary>
      <param name="item">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SortableCollection`1.Remove(`0)">
      <summary>
            Removes an item from the array.
            </summary>
      <param name="item">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SortableCollection`1.Clear">
      <summary>
            Clears the array.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SortableCollection`1.IndexOf(System.Object)">
      <summary>
            Returns the zero-based index of the first occurrence of a value in the array.
            </summary>
      <param name="item">The value to search for.</param>
      <returns>The index.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SortableCollection`1.Contains(`0)">
      <summary>
            Determines whether the array contains another item.
            </summary>
      <param name="item">The item to look for.</param>
      <returns>True or false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SortableCollection`1.CopyTo(`0[],System.Int32)">
      <summary>
            Copies the elements of the ICollection to an array, starting at a particular array index.
            </summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from ICollection. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index, in an array, at which copying begins.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.SortableCollection`1.FreezeSort">
      <summary>
            Gets or sets a value indicating whether the list of items should be sorted. 
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.SortableCollection`1.Count">
      <summary>
            Gets the count of the array.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.SortableCollection`1.Item(System.Int32)">
      <summary>
            Gets an item by index.
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.SortableCollection`1.IsReadOnly">
      <summary>
            Determines whether the list is read-only.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.StreamCollection.Add(Microsoft.Expression.Encoder.Profiles.Bitrate,System.Drawing.Size)">
      <summary>
            Adds a new stream to the collection.
            </summary>
      <param name="bitrate">The bitrate to use for the new stream.</param>
      <param name="size">The size to use for the new stream.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.StreamCollection.Add(Microsoft.Expression.Encoder.Profiles.StreamInfo)">
      <summary>
            Adds an item to the array.
            </summary>
      <param name="item">The item to add.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.StreamCollection.Remove(Microsoft.Expression.Encoder.Profiles.StreamInfo)">
      <summary>
            Removes an item from the array.
            </summary>
      <param name="item">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.StreamCollection.RemoveAt(System.Int32)">
      <summary>
            Removes an item from the array at the passed index.
            </summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.StreamCollection.AutoSize">
      <summary>
            Gets or sets a value indicating whether the streams in this collection are autosized. If they are autosized, 
            the specified width and height indicate the maximum width and height, and the actual width and height will 
            automatically be determined at encoding time.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.StreamInfo">
      <summary>
            Is used to specify information about a stream.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.StreamInfo.#ctor">
      <summary>
            Initializes a new instance of the StreamInfo class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.StreamInfo.#ctor(Microsoft.Expression.Encoder.Profiles.Bitrate,System.Drawing.Size)">
      <summary>
            Initializes a new instance of the StreamInfo class.
            </summary>
      <param name="bitrate">The bitrate to use for this stream.</param>
      <param name="size">The size to use for this stream.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.StreamInfo.Bitrate">
      <summary>
            Gets or sets the bitrate to use for this stream.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.StreamInfo.Size">
      <summary>
            Gets or sets the size to use for this stream.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.StreamInfo.FinalVideoSize">
      <summary>
            Gets the final video size that will be used for this stream. 
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate">
      <summary>
            Is used to specify a variable constrained bitrate.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate">
      <summary>
            Is used to specify a variable unconstrained bitrate.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the VariableUnconstrainedBitrate class.
            </summary>
      <param name="averageBitrate">The average bitrate in Kbps to use.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate.op_Equality(Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate,Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate)">
      <summary>
            Operator override to determine whether two VariableUnconstrainedBitrates are equal.
            </summary>
      <param name="a">The first VariableUnconstrainedBitrate to compare.</param>
      <param name="b">The second VariableUnconstrainedBitrate to compare.</param>
      <returns>True if the first VariableUnconstrainedBitrate is equal to the second VariableUnconstrainedBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate.op_Inequality(Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate,Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate)">
      <summary>
            Operator override to determine whether two VariableUnconstrainedBitrates are not equal.
            </summary>
      <param name="a">The first VariableUnconstrainedBitrate to compare.</param>
      <param name="b">The second VariableUnconstrainedBitrate to compare.</param>
      <returns>True if the first VariableUnconstrainedBitrate is not equal to the second VariableUnconstrainedBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate.Equals(System.Object)">
      <summary>
            Determines whether the specified VariableUnconstrainedBitrate is equal to the current VariableUnconstrainedBitrate.
            </summary>
      <param name="obj">The VariableUnconstrainedBitrate to compare with the current VariableUnconstrainedBitrate.</param>
      <returns>True if the specified VariableUnconstrainedBitrate is equal to the current VariableUnconstrainedBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate.GetHashCode">
      <summary>
            Serves as a hash function for VariableUnconstrainedBitrate.
            </summary>
      <returns>A hash code for the current bitrate.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate.AverageBitrate">
      <summary>
            Gets the average bitrate
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate.BitrateValue">
      <summary>
            Gets the bitrate value.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate.IsTwoPass">
      <summary>
            Gets a value indicating whether Expression Encoder has to do two-pass encoding,
            which is required for variable unconstrained.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VariableUnconstrainedBitrate.IsVariableBitrate">
      <summary>
            Gets a value indicating whether the birate is variable (true) 
            or constant (false).
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the VariableConstrainedBitrate class.
            </summary>
      <param name="averageBitrate">The average bitrate in Kbps.</param>
      <param name="peakBitrate">The peak bitrate in Kbps.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate.#ctor(System.Int32,System.Int32,System.TimeSpan)">
      <summary>
            Initializes a new instance of the VariableConstrainedBitrate class.
            </summary>
      <param name="averageBitrate">The average bitrate in Kbps.</param>
      <param name="peakBitrate">The peak bitrate to use, in Kbps.</param>
      <param name="peakBufferWindow">The peak buffer window. </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate.op_Equality(Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate,Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate)">
      <summary>
            Operator override to determine whether two VariableConstrainedBitrates are equal.
            </summary>
      <param name="a">The first VariableConstrainedBitrate to compare.</param>
      <param name="b">The second VariableConstrainedBitrate to compare.</param>
      <returns>True if the first VariableConstrainedBitrate is equal to the second VariableConstrainedBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate.op_Inequality(Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate,Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate)">
      <summary>
            Operator override to determine whether two VariableConstrainedBitrates are not equal.
            </summary>
      <param name="a">The first VariableConstrainedBitrate to compare.</param>
      <param name="b">The second VariableConstrainedBitrate to compare.</param>
      <returns>True if the first VariableConstrainedBitrate is not equal to the second VariableConstrainedBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate.Equals(System.Object)">
      <summary>
            Determines whether the specified VariableConstrainedBitrate is equal to the current VariableConstrainedBitrate.
            </summary>
      <param name="obj">The VariableConstrainedBitrate to compare with the current VariableConstrainedBitrate.</param>
      <returns>True if the specified VariableConstrainedBitrate is equal to the current VariableConstrainedBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate.GetHashCode">
      <summary>
            Serves as a hash function for VariableConstrainedBitrate.
            </summary>
      <returns>A hash code for the current bitrate.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate.PeakBitrate">
      <summary>
            Gets the peak bitrate.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VariableConstrainedBitrate.PeakBufferWindow">
      <summary>
            Gets the peak buffer window.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate">
      <summary>
            Is used to specify a variable quality bitrate.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the VariableQualityBitrate class.
            </summary>
      <param name="quality">The quality to use.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate.op_Equality(Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate,Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate)">
      <summary>
            Operator override to determine whether two VariableQualityBitrates are equal.
            </summary>
      <param name="a">The first VariableQualityBitrate to compare.</param>
      <param name="b">The second VariableQualityBitrate to compare.</param>
      <returns>True if the first VariableQualityBitrate is equal to the second VariableQualityBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate.op_Inequality(Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate,Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate)">
      <summary>
            Operator override to determine whether two VariableQualityBitrates are not equal.
            </summary>
      <param name="a">The first VariableQualityBitrate to compare.</param>
      <param name="b">The second VariableQualityBitrate to compare.</param>
      <returns>True if the first VariableQualityBitrate is not equal to the second VariableQualityBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate.Equals(System.Object)">
      <summary>
            Determines whether the specified VariableQualityBitrate is equal to the current VariableQualityBitrate.
            </summary>
      <param name="obj">The VariableQualityBitrate to compare with the current VariableQualityBitrate.</param>
      <returns>True if the specified VariableQualityBitrate is equal to the current VariableQualityBitrate; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate.GetHashCode">
      <summary>
            Serves as a hash function for VariableQualityBitrate.
            </summary>
      <returns>A hash code for the current bitrate.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate.Quality">
      <summary>
            Gets the quality.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate.IsTwoPass">
      <summary>
            Gets a value indicating whether Expression Encoder has to do two-pass encoding,
            which isn't required for VBR Quality.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.VariableQualityBitrate.IsVariableBitrate">
      <summary>
            Gets a value indicating whether the bitrate is variable (true) 
            or constant (false).
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile">
      <summary>
            A class that represents a Windows Media Audio profile.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile.#ctor">
      <summary>
            Initializes a new instance of the WmaAudioProfile class. 
            It defaults to 192 Kbps CD Quality.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile.#ctor(Microsoft.Expression.Encoder.Profiles.WmaAudioProfile)">
      <summary>
            Initializes a new instance of the WmaAudioProfile class.
            </summary>
      <param name="profile">The profile to use to initialize this class.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile.Bitrate">
      <summary>
            Gets or sets the bitrate to use when encoding.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile.Codec">
      <summary>
            Gets or sets the value of the audio codec that this profile uses.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile.Channels">
      <summary>
            Gets or sets the number of channels for this profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile.BitsPerSample">
      <summary>
            Gets or sets the number of bits in each sample for this profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile.SamplesPerSecond">
      <summary>
            Gets or sets the number of samples per second for this profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile.StreamCopyOnly">
      <summary>
            Gets a value indicating whether this profile supports only stream copying.
            This can happen if the decoder is installed but the encoder is not installed.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.WmaAudioProfile.IsValid">
      <summary>
            Gets a value indicating whether the current profile settings are valid.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.XmlVideoProfile">
      <summary>
            The video profiles that can be initialized from an XML string
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.XmlVideoProfile.#ctor(System.String)">
      <summary>
            Initializes a new instance of the XmlVideoProfile class from an XML description.
            </summary>
      <param name="streamConfigXml">The XML description that is used in a PRX file.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.XmlVideoProfile.Clone">
      <summary>
            Makes a deep copy of the video profile object.
            </summary>
      <returns>The copied object.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Profiles.XmlVideoProfile.Codec">
      <summary>
            Gets the codec type.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Source">
      <summary>
            An input source for the MediaItem.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Source.#ctor(System.String)">
      <summary>
            Creates a MediaSource from a file name.
            </summary>
      <param name="fileName">The file to create the MediaSource from.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Source.#ctor(Microsoft.Expression.Encoder.MediaFile)">
      <summary>
            Creates a Source object from a media file.
            </summary>
      <param name="mediaFile">The media file object to create the Source from.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Source.Clips">
      <summary>
            Gets the source clips.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Source.MediaFile">
      <summary>
            Gets the source item.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Source.CaptionFiles">
      <summary>
            Gets the closed caption files
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Source.ResizeMode">
      <summary>
            Gets or sets the video resize mode.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Source.ApplyCrop">
      <summary>
            Determines whether cropping should be applied to this source.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Source.AudioStreamIndex">
      <summary>
            The audio stream to render.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.SourceCollection">
      <summary>
            A collection of media sources making up a MediaItem.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SourceCollection.Reset">
      <summary>
            Reset the source clip array to just the default source
            and only one clip on its source clip array.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SourceCollection.RemoveItem(System.Int32)">
      <summary>
            Prevents the default item from being removed.
            </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SourceCollection.MoveItem(System.Int32,System.Int32)">
      <summary>
            Force a change of playback duration.
            </summary>
      <param name="oldIndex">
      </param>
      <param name="newIndex">
      </param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.SourceCollection.IsValid">
      <summary>
            Determines whether all the Source clips arrays are valid.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.SourceCollection.PlaybackDuration">
      <summary>
            Gets the playback duration of the source array.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ThumbnailGenerator">
      <summary>
            Class used to generate thumbnails from a media file.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ThumbnailGenerator.CreateThumbnail(System.TimeSpan)">
      <summary>
            Create a thumbnail at a specified time.
            </summary>
      <param name="time">The time within the file you want the thumbnail for.</param>
      <returns>A bitmap of the generated thumbnail.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ThumbnailGenerator.Dispose">
      <summary>
            Dispose
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.WindowsMediaOutputFormat">
      <summary>
            Specifies that the Windows Media format should be used as the output encoding format.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.WindowsMediaOutputFormat.AudioProfile">
      <summary>
            Gets or sets the audio profile used to encode the audio.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.WindowsMediaOutputFormat.VideoProfile">
      <summary>
            Gets or sets the video profile used to encode the video.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.CodecErrorException">
      <summary>
            The exception used when a codec error has occurred.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CodecErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CodecErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CodecErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CodecErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.CompileAssemblyErrorException">
      <summary>
            Exception that is generated when an error occurs compiling a preset or template.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CompileAssemblyErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CompileAssemblyErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CompileAssemblyErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.CompileAssemblyErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ErrorLogSeverity">
      <summary>
            Indicates the type of message in the error log
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ErrorLogSeverity.Info">
      <summary>
            An informational message.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ErrorLogSeverity.Warning">
      <summary>
            A warning message.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.ErrorLogSeverity.Error">
      <summary>
            An error message.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ConvertErrorException">
      <summary>
            Error Exception used inside the transcoder for errors that should be shown to the user.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ConvertErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ConvertErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ConvertErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ConvertErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ConvertErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ConvertErrorException.#ctor(System.Exception,System.String,System.Object[])">
      <summary>
            Creates an exception from a string and arguments.
            </summary>
      <param name="strMessage">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.FeatureNotAvailableException">
      <summary>
            The exception that is thrown if a feature is called that is not available in the installed SKU.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FeatureNotAvailableException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FeatureNotAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FeatureNotAvailableException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FeatureNotAvailableException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FeatureNotAvailableException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FeatureNotAvailableException.#ctor(System.Exception)">
      <summary>
            Initializes a new instance of the class with a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Live.LiveJob">
      <summary>
            This class exposes routines for encoding video and audio from a live streaming device.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.#ctor">
      <summary>
            Initializes a new instance of the LiveJob class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.ApplyPreset(Microsoft.Expression.Encoder.Preset)">
      <summary>
            Applies a preset to the job.
            </summary>
      <param name="preset">The preset to apply.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.AddFileSource(System.String)">
      <summary>
            Adds a file as a source for this live encode. You can add a file source
            only when the encoding is stopped.
            </summary>
      <param name="fileName">The name of the file to add.</param>
      <returns>The LiveSource added to this job.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.RemoveFileSource(Microsoft.Expression.Encoder.Live.LiveFileSource)">
      <summary>
            Removes a file source from the encoder.
            </summary>
      <param name="source">The file source to remove.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.AddDeviceSource(Microsoft.Expression.Encoder.Devices.EncoderDevice,Microsoft.Expression.Encoder.Devices.EncoderDevice)">
      <summary>
            Adds a video or audio capture device as a source to this live encoding. You can
            add a device as a source only when the encoding is stopped.
            </summary>
      <param name="videoDevice">The video device used in this source.</param>
      <param name="audioDevice">The audio device used in this source.</param>
      <returns>The LiveSource added to this job.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.RemoveDeviceSource(Microsoft.Expression.Encoder.Live.LiveDeviceSource)">
      <summary>
            Removes a device source from the encoder.
            </summary>
      <param name="source">The file source to remove.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.ActivateSource(Microsoft.Expression.Encoder.Live.LiveSource)">
      <summary>
            Starts playback of a new source. You can switch to a source only when the
            encode is running.
            </summary>
      <param name="source">The source to be activated.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.ResetSource(Microsoft.Expression.Encoder.Live.LiveFileSource)">
      <summary>
            Resets a source to the beginning. This applies only to file sources, and you cannot
            reset a source if it is the active source.
            </summary>
      <param name="source">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.StartEncoding">
      <summary>
            Starts encoding this job.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.StopEncoding">
      <summary>
            Stops any encoding of this job and disconnects any publishing process.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.ServerStatisticsSnapshot">
      <summary>
            Gets the current statistics from a WMS server, if one exists.
            </summary>
      <returns>The current statistics from the WMS server, or null if none exist.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.Save(System.String)">
      <summary>
            Saves this job to a file.
            </summary>
      <param name="outputFileName">The name of the file to save the job to.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.Load(System.String)">
      <summary>
            Loads the settings in the job file.
            </summary>
      <param name="inputFileName">The job file to load.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.AddScriptCommand(System.String,System.String)">
      <summary>
            Adds a new script command to the job. Adding a script command to the job
            ensures that it gets persisted.
            </summary>
      <param name="type">The type of the command to add.</param>
      <param name="command">The command to perform.</param>
      <returns>The new script command.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.RemoveScriptCommand(Microsoft.Expression.Encoder.Live.ScriptCommand)">
      <summary>
            Removes the script command from the job.
            </summary>
      <param name="command">The command to remove.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.SendScriptCommand(Microsoft.Expression.Encoder.Live.ScriptCommand)">
      <summary>
            Sends the given script command to the encoder.
            </summary>
      <param name="command">The command to send to the encoder.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.PreConnectPublishingPoint">
      <summary>
            Tests the connections on the publishing point, if there is one.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.GenerateStreamFormatFile(System.String)">
      <summary>
            Generates the multi cast stream format file for a publishing point.
            </summary>
      <param name="outputFileName">The name of the output file</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.Dispose">
      <summary>
            IDisposable finalizer. This cleans up the internal implementation class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Live.LiveJob.Dispose(System.Boolean)">
      <summary>
            IDisposable finalizer.
            </summary>
      <param name="disposing">When false, cleans up only managed. When true, cleans up both.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.FileSources">
      <summary>
            Gets a list of file sources that have been added to this job.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.DeviceSources">
      <summary>
            Gets a list of device sources that have been added to this job.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.PublishFormats">
      <summary>
            The list of formats to publish the job to. This includes file archiving and
            push and pull broadcasting.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.ScriptCommands">
      <summary>
            Gets a list of script commands that can be sent to the encoder
            at run time.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.CurrentAudioVolume">
      <summary>
            Gets the current audio output volume. When no encoding is happening, this value is 0.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.MuteAudioOutput">
      <summary>
            Gets or sets a value indicating whether the current audio output is muted.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.Drm">
      <summary>
            Gets or sets the current DRM settings, if applicable.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.IsCapturing">
      <summary>
            Gets a flag indicating whether capturing is occurring.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.ResizeQuality">
      <summary>
            Gets or sets the resizing quality of the encoder.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.DeinterlaceMode">
      <summary>
            Gets or sets the deinterlace mode. The default is AutoBob, which is recommended.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.MaxPacketSize">
      <summary>
            Gets or sets the maximum packet size.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.MinPacketSize">
      <summary>
            Gets or sets the minimum packet size.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.WindowsMediaProfileLanguage">
      <summary>
            Get or sets the language of the Windows Media profile for ASF files.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.NormalizeAudio">
      <summary>
            Gets or sets a value indicating whether the audio should be normalized during encoding.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.AudioGainLevel">
      <summary>
            Gets or sets the audio gain level.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.OutputFormat">
      <summary>
            Gets or sets the output format of the encoder.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.SampleDropperSensitivity">
      <summary>
            Gets or sets the sensitivity of the sample dropping logic.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.NumberOfEncodedSamples">
      <summary>
            Gets the number of encoded samples so far.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.NumberOfDroppedSamples">
      <summary>
            Gets the number of dropped frames. This applies only to video samples,
            because audio samples are never dropped.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.BufferWindowSize">
      <summary>
            Gets the current size of the buffer window in the encoder. This
            applies to video samples.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.OutputPreviewWindow">
      <summary>
            Gets or sets the preview window associated with the encoded output. This
            defaults to null, which disables the output preview.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.ConnectedClients">
      <summary>
            Gets a collection of the currently connected clients. This is valid only for
            broadcast publishing points, and will return an empty collection for all other cases.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Live.LiveJob.Metadata">
      <summary>
            The metadata collection for this job. Stored in the header during encoding.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.MetadataValues">
      <summary>
            Class that contains the predefined metadata values for the primary and secondary class ID.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.EncoderSku">
      <summary>
            Expression Encoder SKU.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.EncoderSku.Standard">
      <summary>
            Expression Encoder Standard.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.EncoderSku.ProNoCodecs">
      <summary>
            Expression Encoder Full Version Without Codecs.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.EncoderSku.Pro">
      <summary>
            Expression Encoder Full Version.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Settings">
      <summary>
            Used to determine if this is a Standard SKU, and if it can be used to delete the media import cache.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Settings.DeleteMediaCache">
      <summary>
            Deletes the media import cache.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Settings.EncoderSku">
      <summary>
            Gets or sets a value for the SKU.
            An application may set this property to simulate a lower SKU.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.OutputFileType">
      <summary>
            Type of output files that are created.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.OutputFileType.MediaFile">
      <summary>
            A media file.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.OutputFileType.ClientManifestFile">
      <summary>
            A client manifest.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.OutputFileType.ServerManifestFile">
      <summary>
            A server manifest.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.OutputFile">
      <summary>
            Data about a single output file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.OutputFile.FullPath">
      <summary>
            Gets the full path of the file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.OutputFile.FileName">
      <summary>
            Gets the file name.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.OutputFile.OutputFileType">
      <summary>
            Gets the output type.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.OutputFileCollection">
      <summary>
            Collection of output files.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.EncoderPlugin">
      <summary>
            The class from which a plug-in is derived.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.EncoderPlugin.InitPublishingHost(Microsoft.Expression.Encoder.Plugins.IPluginHost)">
      <summary>
            Sets the publishing host.
            </summary>
      <param name="host">The publishing host to use.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.EncoderPlugin.OnEncodeStart(Microsoft.Expression.Encoder.JobBase,Microsoft.Expression.Encoder.MediaItem[])">
      <summary>
            Is called when encoding is about to start.
            </summary>
      <param name="job">The job that is being encoded.</param>
      <param name="items">The list of items to be encoded.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.EncoderPlugin.OnJobLoad(Microsoft.Expression.Encoder.JobBase)">
      <summary>
            Is called when a job is loaded.  In the UI the MediaItems may not be loaded yet.
            </summary>
      <param name="job">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.EncoderPlugin.OnMediaItemLoad(Microsoft.Expression.Encoder.MediaItem)">
      <summary>
            Is called when a MediaItem is loaded from a job.  Outside the UI, this will be called before OnJobLoad.  Inside
            the UI this will be called after OnJobLoad because the UI loads the job asynchronously.
            </summary>
      <param name="item">
      </param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.EncoderPlugin.PublishingHost">
      <summary>
            Gets the publishing host.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.MissingUndoGroupException">
      <summary>
            The exception that is thrown when a plug-in fails to call IPluginHost.CreateUndoGroup.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.MissingUndoGroupException.#ctor">
      <summary>
            Initializes a new instance of the MissingUndoGroupException class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.MissingUndoGroupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the MissingUndoGroupException class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.MissingUndoGroupException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the MissingUndoGroupException class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.MissingUndoGroupException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the MissingUndoGroupException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.IPluginHost">
      <summary>
            Interface for plug-ins to perform tasks in the UI.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.IPluginHost.ShowMessageBox(System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>
            Shows a message box.
            </summary>
      <param name="message">
      </param>
      <param name="buttons">
      </param>
      <param name="image">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.IPluginHost.WriteActivityLogEntry(System.String,Microsoft.Expression.Encoder.ErrorLogSeverity)">
      <summary>
            Writes an activity log entry.
            </summary>
      <param name="message">
      </param>
      <param name="severity">
      </param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.IPluginHost.ConvertPlayHeadTimeToMainVideoSourceTime(Microsoft.Expression.Encoder.Source,System.TimeSpan)">
      <summary>
            Converts play head time to main video source time.
            </summary>
      <param name="time">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.IPluginHost.ConvertPlayHeadTimeToMainVideoOutputTime(Microsoft.Expression.Encoder.Source,System.TimeSpan)">
      <summary>
            Converts play head time to main video output time.
            </summary>
      <param name="time">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.IPluginHost.CreateUndoGroup(System.String)">
      <summary>
            Creates an undo group.
            </summary>
      <param name="undoGroupName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.IPluginHost.CreateMediaItem(System.String)">
      <summary>
            Creates a Media item for use in the application.
            </summary>
      <param name="fileName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.IPluginHost.CurrentJob">
      <summary>
            Gets the current job.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.IPluginHost.CurrentSelection">
      <summary>
            Gets the current selection.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.IPluginHost.CurrentPlayHeadPosition">
      <summary>
            Gets the current play head position.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Publishing.EncoderPluginAttribute">
      <summary>
            Used when creating an Encoder plug-in.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.EncoderPluginAttribute.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the EncoderPluginAttribute class.
            </summary>
      <param name="name">The name of the plug-in.</param>
      <param name="description">A description of the plug-in.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.EncoderPluginAttribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of the EncoderPluginAttribute class.
            </summary>
      <param name="name">The name of the plug-in.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Publishing.EncoderPluginAttribute.Name">
      <summary>
            Gets the name of the plug-in.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Publishing.EncoderPluginAttribute.Description">
      <summary>
            Gets the description of the plug-in.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Publishing.ProgressEventArgs">
      <summary>
            Event arguments that the plug-in will pass when raising progress events.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.ProgressEventArgs.#ctor(System.String,System.Double)">
      <summary>
            Initializes a new instance of the ProgressEventArgs class.
            </summary>
      <param name="description">The description of the progress event.</param>
      <param name="progress">The progress value.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Publishing.ProgressEventArgs.Description">
      <summary>
            Gets a description of the progress event.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Publishing.ProgressEventArgs.Progress">
      <summary>
            Gets the progress value.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Publishing.ProgressEventArgs.Cancel">
      <summary>
            Gets or sets a value indicating whether the operation should be canceled.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Publishing.PublishPlugin">
      <summary>
            Base class from which plug-in writers inherit.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.PublishPlugin.CreateStandardSettingsEditor">
      <summary>
            Creates the standard UI that the plug-in requires.
            </summary>
      <returns>A WPF object that will be placed within a ContentPresenter.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.PublishPlugin.CreateAdvancedSettingsEditor">
      <summary>
            Creates the advanced UI or returns null if not required.
            </summary>
      <returns>A WPF object that will be placed within a ContentPresenter.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.PublishPlugin.PerformPublish(System.String,System.String[])">
      <summary>
            Publish on this thread.
            </summary>
      <param name="rootPath">The root path containing the files to publish.</param>
      <param name="filesToPublish">The list of files to publish.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.PublishPlugin.OnProgress(System.String,System.Double)">
      <summary>
            Progress helper function.
            </summary>
      <param name="description">The description of the progress event.</param>
      <param name="progress">The value of the progress event.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.PublishPlugin.CancelPublish">
      <summary>
            Protected function called when cancel is set in progress.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.PublishPlugin.LoadUISettings(System.Xml.XmlReader)">
      <summary>
            Load settings that are tracked per user.
            </summary>
      <param name="reader">The XmlReader to read the settings from.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.PublishPlugin.SaveUISettings(System.Xml.XmlWriter)">
      <summary>
            Save settings that are tracked per user.
            </summary>
      <param name="writer">The XmlWriter to save the settings to.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.PublishPlugin.LoadJobSettings(System.Xml.XmlReader)">
      <summary>
            Load settings that are tracked per job.
            </summary>
      <param name="reader">The XmlReader to read the settings from.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Publishing.PublishPlugin.SaveJobSettings(System.Xml.XmlWriter)">
      <summary>
            Save settings that are tracked per job.
            </summary>
      <param name="writer">The XmlWriter to save the settings to.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Templates.DefaultTemplateParameterUI">
      <summary>
            Class that can be used in the XAML of a template that will cause
            all the template parameters to show up.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterProperties">
      <summary>
            Base class that does a run-time merge of the template parameters in the template
            and those exposed by the plug-in.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterProperties.OnPropertyChanged(System.String)">
      <summary>
            Fire the PropertyChanged event.
            </summary>
      <param name="propertyName">The name of the property that has changed.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Templates.PublishedMarker">
      <summary>
            Holds information about a published marker.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedMarker.Value">
      <summary>
            Gets the value of the marker.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedMarker.Time">
      <summary>
            Gets the time of the marker.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedMarker.ThumbnailPath">
      <summary>
            Gets the thumbnail path of the marker.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedMarker.GenerateThumbnail">
      <summary>
            Gets a value indicating whether a thumbnail has been generated for this marker.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary">
      <summary>
            Allows setting and getting of template parameters.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Add(Microsoft.Expression.Encoder.Templates.TemplateParameter,System.Object)">
      <summary>
            This function is not supported.
            </summary>
      <param name="key">The parameter is not used.</param>
      <param name="value">The parameter is not used.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.ContainsKey(Microsoft.Expression.Encoder.Templates.TemplateParameter)">
      <summary>
            Ascertains whether the collection contains the passed template parameter.
            </summary>
      <param name="key">The template parameter to check.</param>
      <returns>True if the key is found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Remove(Microsoft.Expression.Encoder.Templates.TemplateParameter)">
      <summary>
            This function is not supported.
            </summary>
      <param name="key">The parameter is not used.</param>
      <returns>The parameter is not used.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.TryGetValue(Microsoft.Expression.Encoder.Templates.TemplateParameter,System.Object@)">
      <summary>
            Try to get a value for a template parameter.
            </summary>
      <param name="key">The template parameter.</param>
      <param name="value">The value of the template parameter.</param>
      <returns>True if the value was retrieved; otherwise, falset.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Expression.Encoder.Templates.TemplateParameter,System.Object})">
      <summary>
            This function is not supported.
            </summary>
      <param name="item">The parameter is not used.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Clear">
      <summary>
            This function is not supported.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Expression.Encoder.Templates.TemplateParameter,System.Object})">
      <summary>
            This function is not supported.
            </summary>
      <param name="item">The parameter is not used.</param>
      <returns>The parameter is not used.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Expression.Encoder.Templates.TemplateParameter,System.Object}[],System.Int32)">
      <summary>
            This function is not supported.
            </summary>
      <param name="array">The parameter is not used.</param>
      <param name="arrayIndex">The parameter is not used.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Expression.Encoder.Templates.TemplateParameter,System.Object})">
      <summary>
            This function is not supported.
            </summary>
      <param name="item">The parameter is not used.</param>
      <returns>The parameter is not used.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.GetEnumerator">
      <summary>
            Gets the key value pairs.
            </summary>
      <returns>An enumeration of the key value pairs.</returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.FindKey(System.String)">
      <summary>
            Finds a template parameter matching a string.
            </summary>
      <param name="name">The name of the template parameter to find.</param>
      <returns>The located template parameter.</returns>
      <exception cref="T:Microsoft.Expression.Encoder.ArgumentErrorException">Thrown if the template parameter can't be found.</exception>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Keys">
      <summary>
            Gets the list of template parameters.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Values">
      <summary>
            Gets the list of values.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Item(Microsoft.Expression.Encoder.Templates.TemplateParameter)">
      <summary>
            Gets or sets a value of a template parameter.
            </summary>
      <param name="key">The template parameter.</param>
      <returns>The value of the template parameter.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Item(System.String)">
      <summary>
            Gets or sets a value of a template parameter by name.
            </summary>
      <param name="name">The name of the template parameter.</param>
      <returns>The value of the template parameter.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.Count">
      <summary>
            Gets the number of items
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterDictionary.IsReadOnly">
      <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Templates.TemplatePlugin">
      <summary>
            Base template plug-in class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplatePlugin.CreatePreviewControl">
      <summary>
            Create the preview control
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplatePlugin.CreateUserInterface">
      <summary>
            Create the user interface
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplatePlugin.CreateFileList(System.String,System.String[])">
      <summary>
            Allows adjustment of the file list.
            </summary>
      <param name="destinationRoot">
      </param>
      <param name="currentFiles">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplatePlugin.DataModal">
      <summary>
            Get the data modal
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplatePlugin.TemplateParameters">
      <summary>
            Get the template parameters.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Templates.TemplateUIAttribute">
      <summary>
            Attribute set on a DataModal property to have the property shown in the default UI.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateUIAttribute.Caption">
      <summary>
            Gets or sets the caption.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateUIAttribute.Tooltip">
      <summary>
            Gets or sets the tooltip.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateUIAttribute.MinValue">
      <summary>
            Gets or sets the minimum value.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateUIAttribute.MaxValue">
      <summary>
            Gets or sets the maximum value.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateUIAttribute.EnumValues">
      <summary>
            Gets or sets the possible enumeration values.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterPropertiesTypeAttribute">
      <summary>
            Used to specify what the data type is.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterPropertiesTypeAttribute.#ctor(System.Type)">
      <summary>
            Initializes a new instance of the TemplateParameterPropertiesTypeAttribute class.
            </summary>
      <param name="templateParameterPropertiesType">The type of the data.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.TemplateParameterPropertiesTypeAttribute.TemplateParameterPropertiesType">
      <summary>
            Gets the type of the data model.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ProfileNotFoundException">
      <summary>
            The exception that is thrown when a profile can't be found.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ProfileNotFoundException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ProfileNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ProfileNotFoundException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ProfileNotFoundException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.InvalidLicensingException">
      <summary>
            The exception that is thrown when a licensing error has occurred.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidLicensingException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidLicensingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidLicensingException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidLicensingException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.DrmErrorException">
      <summary>
            Error Exception that is thrown if a file with DRM is imported.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.DrmErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.DrmErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.DrmErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.DrmErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.EncodeErrorException">
      <summary>
            An exception that is thrown when an error occurs during encoding.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncodeErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncodeErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncodeErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncodeErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncodeErrorException.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the class with a property that is causing the encode to fail along with a specified error message.
            </summary>
      <param name="preEncodeProperty">The property that is causing the encode to fail.</param>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.EncodeErrorException.#ctor(System.String,System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.FileIOErrorException">
      <summary>
            The exception that is thrown if an error occurs reading from or writing to a file.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FileIOErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FileIOErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FileIOErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FileIOErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.FileIOErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.InvalidJobException">
      <summary>
            The exception that is thrown if an invalid job is loaded.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidJobException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidJobException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidJobException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidJobException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidJobException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.InvalidJobTemplateException">
      <summary>
            The exception that is thrown when a preset is invalid.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidJobTemplateException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidJobTemplateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidJobTemplateException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidJobTemplateException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidJobTemplateException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.InvalidMediaFileException">
      <summary>
            The exception that is thrown when an invalid media file is passed in.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidMediaFileException.#ctor">
      <summary>
            Initializes a new instance of the InvalidMediaFileException class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidMediaFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the InvalidMediaFileException class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidMediaFileException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the InvalidMediaFileException class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.InvalidMediaFileException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the InvalidMediaFileException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.UnindexedFileException">
      <summary>
            The exception that is thrown when an unindexed file is imported.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.UnindexedFileException.#ctor">
      <summary>
            Initializes a new instance of the UnindexedFileException class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.UnindexedFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the UnindexedFileException class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.UnindexedFileException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the UnindexedFileException class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.UnindexedFileException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the UnindexedFileException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.MediaItemCollection">
      <summary>
            Items to encode.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaItemCollection.Add(System.String)">
      <summary>
            Adds a media item from a file name.
            </summary>
      <param name="fileName">The file name of the media to add.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaItemCollection.Clear">
      <summary>
            Clears all the media items from the collection.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaItemCollection.InsertItem(System.Int32,Microsoft.Expression.Encoder.MediaItem)">
      <summary>
            Insert a media item into the collection.
            </summary>
      <param name="index">The zero-based index at which the media item should be inserted.</param>
      <param name="item">The media item to insert.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaItemCollection.RemoveItem(System.Int32)">
      <summary>
            Removes a media item from the collection.
            </summary>
      <param name="index">The zero-based index of the media item to remove.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaItemCollection.MoveItem(System.Int32,System.Int32)">
      <summary>
            Moves the media item at the specified index to a new location in the collection
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the media item to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the media item.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ProfileArgumentErrorException">
      <summary>
            The exception that is thrown if an invalid value is passed to one of the profile properties.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ProfileArgumentErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ProfileArgumentErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ProfileArgumentErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ProfileArgumentErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ProfileArgumentErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.SystemErrorException">
      <summary>
            The exception that is thrown if an unexpected error is returned from the system.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SystemErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SystemErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SystemErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SystemErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.SystemErrorException.#ctor(System.Exception,System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with an internal exception, a specified error message, and a list of arguments.
            </summary>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.TemplateArgumentErrorException">
      <summary>
            The exception that is thrown when a template has an invalid argument.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.TemplateArgumentErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.TemplateArgumentErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.TemplateArgumentErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.TemplateArgumentErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.TemplateArgumentErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Initializes a new instance of the class with a specified error message and a list of arguments.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="args">The list of arguments.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.TemplateCreationErrorException">
      <summary>
            The exception that is thrown when there is an error creating a template.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.TemplateCreationErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.TemplateCreationErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.TemplateCreationErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.TemplateCreationErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Templates.TemplateParameter">
      <summary>
            Class representing a template parameter.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Templates.TemplateParameter.ConvertEnumStringToValue(System.String)">
      <summary>
            Converts the enumeration string to a value.
            </summary>
      <param name="value">The value to look for.</param>
      <returns>The value.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.Name">
      <summary>
            Gets the name of the template parameter.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.Caption">
      <summary>
            Gets the caption of the template parameter.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.Tooltip">
      <summary>
            Gets the tooltip for the template parameter.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.ParameterType">
      <summary>
            Gets the type of the template parameter.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.MinValue">
      <summary>
            Gets the minimum value of the template parameter.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.MaxValue">
      <summary>
            Gets the maximum value of the template parameter.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.Enum">
      <summary>
            Get the enumeration string of the template parameter.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.Hidden">
      <summary>
            Gets a value indicating whether the template parameter should be hidden in the UI.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.OutsideExpander">
      <summary>
            Gets a value indicating whether this parameter should be shown outside the expander
            in the UI. Defaults to false.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.ReadOnly">
      <summary>
            Gets a value indicating whether the template parameter is read-only.
            Implies Hidden.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateParameter.EnumList">
      <summary>
            Gets an enumeration list for this template parameter (useful as a datasource for UI items such as ItemsControl).
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Templates.TemplateParameterCollection">
      <summary>
            A read-only collection of template parameters.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.ScriptCommand">
      <summary>
             Class that represents a script command.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScriptCommand.#ctor">
      <summary>
            Initializes a new instance of the ScriptCommand class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScriptCommand.#ctor(System.TimeSpan,System.String,System.String)">
      <summary>
            Initializes a new instance of the ScriptCommand class.
            </summary>
      <param name="time">The time of the script command.</param>
      <param name="type">The type of the script command.</param>
      <param name="command">The value of the script command.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.ScriptCommand.#ctor(Microsoft.Expression.Encoder.Source,System.TimeSpan,System.String,System.String)">
      <summary>
            Initializes a new instance of the ScriptCommand class tied to a non-default source.
            </summary>
      <param name="mediaSource">The source that the script command is tied to.</param>
      <param name="time">The time of the script command.</param>
      <param name="type">The type of the script command.</param>
      <param name="command">The value of the script command.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScriptCommand.Time">
      <summary>
            Gets or sets the time of the script command.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScriptCommand.Type">
      <summary>
            Gets or sets the type of the script command.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScriptCommand.Command">
      <summary>
            Gets or sets the value of the script command.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScriptCommand.OutputTime">
      <summary>
            Current output time.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.ScriptCommand.MediaSource">
      <summary>
            Get the source this media is for.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.MetadataCollection">
      <summary>
            A class used to hold a collection of metadata.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MetadataCollection.Clear">
      <summary>
            Clears the array.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MetadataCollection.GetEnumerator">
      <summary>
            Returns an enumeration for the metadata in the collection.
            </summary>
      <returns>The enumerator</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MetadataCollection.Count">
      <summary>
            Gets the count of metadata items.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MetadataCollection.Item(System.String)">
      <summary>
            Gets or sets a metadata value.
            </summary>
      <param name="key">The metadata value.</param>
      <returns>The value of the metadata.</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MetadataCollection.Item(Microsoft.Expression.Encoder.MetadataName)">
      <summary>
            Gets or sets a metadata value from a MetadataName.
            </summary>
      <param name="name">The MetadataName</param>
      <returns>The value of the metadata</returns>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MetadataCollection.Item(System.Guid)">
      <summary>
            Dictionary lookup.
            </summary>
      <param name="key">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.Expression.Encoder.MediaItem">
      <summary>
            Holds all the information being tracked per item.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaItem.ApplyPreset(System.String)">
      <summary>
            Applies a preset to the media item.
            </summary>
      <param name="fileName">The file name of the preset to apply</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaItem.ApplyPreset(Microsoft.Expression.Encoder.Preset)">
      <summary>
            Applies a preset to the media item.
            </summary>
      <param name="preset">The preset to apply.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaItem.#ctor(System.String)">
      <summary>
            Initializes a new instance of the MediaItem class from a file name, used when called from the object mode.
            </summary>
      <param name="fileName">The file name for this media item</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.MediaItem.#ctor(Microsoft.Expression.Encoder.AudioVideoFile)">
      <summary>
            Initializes a new instance of the MediaItem class from an AudioVideoFile.
            </summary>
      <param name="file">The file for this media item</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayFileName">
      <summary>
            Gets or sets the file that should be used as the overlay.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayRect">
      <summary>
            Gets or sets the position of the overlay.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OriginalOverlaySize">
      <summary>
            Gets the original size of the overlay file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayOpacity">
      <summary>
            Gets or sets the opacity of the overlay between 0 (transparent) and 1 (completely opaque).
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayTransparentBackground">
      <summary>
            Gets or sets a value indicating whether the background of the overlay should be transparent.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayVideoDuration">
      <summary>
            Gets the duration of the overlay if it is a video or animated GIF.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayLoop">
      <summary>
            Gets or sets a value indicating whether the overlay should loop.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayLoopingGap">
      <summary>
            Gets or sets the duration of the time that is taken before the overlay loops.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayFadeInDuration">
      <summary>
            Gets or sets a value that indicates how long the overlay takes to fade in.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayFadeOutDuration">
      <summary>
            Gets or sets a value that indicates how long the overlay takes to fade out.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayLayoutMode">
      <summary>
            Gets or sets a value that indicates in which part of the output the overlay should appear.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayStartTime">
      <summary>
            Gets or sets the start time of the overlay.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayEndTime">
      <summary>
            Gets or sets the timespan when the overlay should end.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayAudioGainLevel">
      <summary>
            Gets or sets the audio volume of the video overlay.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OverlayContainsAudio">
      <summary>
            Gets a value indicating whether the video overlay contains audio.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioOverlayFileName">
      <summary>
            Gets or sets the file to be used as the audio overlay.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioOverlayDuration">
      <summary>
            Gets the duration of the audio overlay.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioOverlayLoop">
      <summary>
            Gets or sets a value indicating whether the audio overlay should loop.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioOverlayLoopingGap">
      <summary>
            Gets or sets the duration before the audio overlay loops.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioOverlayLayoutMode">
      <summary>
            Gets or sets a value that indicates in which part of the output the audio overlay should appear.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioOverlayStartTime">
      <summary>
            Gets or sets the start time of the audio overlay.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioOverlayEndTime">
      <summary>
            Gets or sets the time when the audio overlay should end.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioOverlayGainLevel">
      <summary>
            Gets or sets the gain level of the audio overlay.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioOverlayFadeInDuration">
      <summary>
            Gets or sets a value that indicates how long the overlay takes to fade in.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioOverlayFadeOutDuration">
      <summary>
            Gets or sets a value that indicates how long the overlay takes to fade out.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.DeinterlaceMode">
      <summary>
            Gets or sets the deinterlace mode.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ResizeQuality">
      <summary>
            Gets or sets the algorithm that is used to resize the video.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.NormalizeAudio">
      <summary>
            Gets or sets a value indicating whether the audio should be normalized during encoding.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.AudioGainLevel">
      <summary>
            Gets or sets the audio gain level.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.SourceVideoProfile">
      <summary>
            Gets the video profile that matches the source file, if found.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.SourceAudioProfile">
      <summary>
            Gets the audio profile that matches the source file, if found.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.MaxPacketSize">
      <summary>
            Gets or sets the maximum size of a packet in bytes.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.MinPacketSize">
      <summary>
            Gets or sets the minimum size of a packet in bytes.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.WindowsMediaProfileLanguage">
      <summary>
            Gets or sets the language of the Windows Media profile for ASF files.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.CropRect">
      <summary>
            Gets or sets the crop rectangle.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.VideoSize">
      <summary>
            Gets the size of the video to be created.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OriginalVideoSize">
      <summary>
            Gets the frame size of the original file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OriginalAspectRatio">
      <summary>
            Gets the aspect ratio of the original file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.VideoResizeMode">
      <summary>
            Gets or sets the video resize mode.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.DisplayVideoSize">
      <summary>
            Gets the display video size. This is the size that could be used to display output video using square pixels.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OutputAspectRatio">
      <summary>
            Gets the output aspect ratio.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OriginalInterlaced">
      <summary>
            Gets a value indicating whether the original file is interlaced.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.TotalBitrate">
      <summary>
            Gets the total bitrate of the video and audio streams. If a quality-based profile has been specified,
            -1 will be returned.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.MaxBitrate">
      <summary>
            Gets the maximum bitrate of the video and audio stream.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.EstimatedFileSize">
      <summary>
            Gets the estimated file size in bytes. If a quality-based profile has been specified,
            -1 will be returned.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.Sources">
      <summary>
            Gets the list of source clips.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.FileDuration">
      <summary>
            Gets the duration of the file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.PlaybackDuration">
      <summary>
            Gets the playback duration.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OutputFileEstimatedSize">
      <summary>
            Gets an estimated size of the output file in bytes.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.Name">
      <summary>
            Gets the name, which is the file name of the item without the extension.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.SourceFileName">
      <summary>
            Gets the full path of the source file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.Status">
      <summary>
            Gets the item's status.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.FileType">
      <summary>
            Gets a value indicating whether the item is going to encode video, audio, or both. This is
            controlled by whether the output format contains a video profile and/or an audio profile.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OriginalFileType">
      <summary>
            Gets the type of the original file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.Error">
      <summary>
            Gets any errors that could have occurred during the encoding of the item.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OriginalFrameRate">
      <summary>
            Gets the frame rate of the original file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OutputFrameRate">
      <summary>
            Gets the frame rate used to encode the output file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.MainMediaFile">
      <summary>
            Gets the source that created this object.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.Drm">
      <summary>
            Gets or sets the DRM settings, if applicable.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.Markers">
      <summary>
            Gets the list of markers to be added to the output file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ScriptCommands">
      <summary>
            Gets the list of script commands.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.Metadata">
      <summary>
            Gets the list of metadata.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ScriptCommandOutput">
      <summary>
            Gets or sets a value that indicates whether the script commands should be written to the header or to the stream.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ThumbnailMode">
      <summary>
            Gets or sets a value that indicates which mode should be used to determine the thumbnail.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ThumbnailTime">
      <summary>
            Gets or sets the time within the source file to be used for the thumbnail if the thumbnail mode is set to custom.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ThumbnailCodec">
      <summary>
            Gets or sets the format to be used to save the thumbnail.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ThumbnailJpegCompression">
      <summary>
            Gets or sets a value to be used for the JPEG compression if the thumbnail is saved as a JPEG.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ThumbnailSize">
      <summary>
            Gets or sets the size to be used for the thumbnail.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ThumbnailEmbed">
      <summary>
            Gets or sets a value indicating whether the thumbnail should be embedded in the output file if the output container is ASF. 
            This property is ignored if the output container is any other format.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.MarkerThumbnailCodec">
      <summary>
            Gets or sets the format to be used to save the marker thumbnails.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.MarkerThumbnailJpegCompression">
      <summary>
            Gets or sets a value to be used for the JPEG compression if the marker thumbnail is saved as a JPEG.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.MarkerThumbnailSize">
      <summary>
            Gets or sets the size to be used for marker thumbnails.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OutputFileName">
      <summary>
            Gets or sets the output file name. This can include replaceable fields, for example, {Original file name}.{Default extension}.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OutputFiles">
      <summary>
            Gets the output file collection.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ActualOutputFileName">
      <summary>
            Gets the file name of the output file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.ActualOutputFileFullPath">
      <summary>
            Gets the full path of the output file name.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.MediaItem.OutputFormat">
      <summary>
            Gets or sets the format of the output.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Templates.PublishedMarkerCollection">
      <summary>
            A collection of published markers.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Plugins.Templates.PublishedMarkerCollection.#ctor(System.Collections.Generic.IList{Microsoft.Expression.Encoder.Plugins.Templates.PublishedMarker})">
      <summary>
            Initializes a new instance of the PublishedMarkerCollection.
            </summary>
      <param name="list">The list of published markers to initialize the class with.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedMarkerCollection.Length">
      <summary>
            Gets the number of items in the collection.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Templates.PublishedCaptionFile">
      <summary>
            The class that represents a published caption file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedCaptionFile.CaptionType">
      <summary>
            Gets the caption type.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedCaptionFile.FileName">
      <summary>
            Gets the file name of the caption file.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedCaptionFile.Culture">
      <summary>
            Gets the culture of the caption file.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Plugins.Templates.PublishedItem">
      <summary>
            Holds information about the published output of an item.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedItem.MediaItem">
      <summary>
            Gets the media item.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedItem.OutputFileName">
      <summary>
            Gets the output file name.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedItem.ThumbnailPath">
      <summary>
            Gets the thumbnail path.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedItem.CaptionFiles">
      <summary>
            Gets the caption files for each language
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedItem.OutputFileSizes">
      <summary>
            Encoded media sizes in bytes.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedItem.Markers">
      <summary>
            Gets the marker collection.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Plugins.Templates.PublishedItem.ScriptCommands">
      <summary>
            Gets the script commands.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.XmlErrorException">
      <summary>
            The exception that is thrown if an invalid XML file is encountered.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.XmlErrorException.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.XmlErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class with serialized object data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.XmlErrorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.XmlErrorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.XmlErrorException.#ctor(System.String,System.Object[])">
      <summary>
            Creates an exception from a string and arguments.
            </summary>
      <param name="strMessage">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Profiles.PrxParser">
      <summary>
            This class handles accessing all the stock profiles that are provided by Expression Encoder.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Profiles.PrxParser.LoadProfileFromFile(System.String,Microsoft.Expression.Encoder.Profiles.VideoProfile@,Microsoft.Expression.Encoder.Profiles.AudioProfile@)">
      <summary>
            Loads a profile from an Expression Encoder XML profile or a PRX profile.
            </summary>
      <param name="fileName">The file name of the profile to load.</param>
      <param name="videoProfile">The returned VideoProfile class if the profile contains video information.</param>
      <param name="audioProfile">The returned AudioProfile class if the profile contains audio information.</param>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Templates.TemplateCapabilities">
      <summary>
            The capabilities of a template.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.None">
      <summary>
            No extended capability.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Captions">
      <summary>
            Closed captioning is supported by this template.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Chapters">
      <summary>
            The chapters control is supported by this template.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Gallery">
      <summary>
            This template supports the video gallery.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Supports16By9">
      <summary>
            This template supports 16:9.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Supports4By3">
      <summary>
            This template supports 4:3.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Video">
      <summary>
            This template supports video.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Audio">
      <summary>
            This template supports audio.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.WebBrowsable">
      <summary>
            This template can be viewed in a browser.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Silverlight10">
      <summary>
            This template requires a version of Silverlight not earlier than Silverlight 1.0.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Silverlight20">
      <summary>
            This template requires a version of Silverlight not earlier than Silverlight 2.0.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.AdaptiveStreaming">
      <summary>
            This template supports adaptive streaming.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.WindowsMediaMbr">
      <summary>
            This template supports Windows Media MBR.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Silverlight30">
      <summary>
            This template requires a version of Silverlight not earlier than Silverlight 3.0.
            </summary>
    </member>
    <member name="F:Microsoft.Expression.Encoder.Templates.TemplateCapabilities.Silverlight40">
      <summary>
            This template requires a version of Silverlight not earlier than Silverlight 4.0.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Templates.Template">
      <summary>
            A template that consists of a list of resources.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Templates.Template.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the Template class.
            </summary>
      <param name="name">The name of the template.</param>
      <param name="directoryPath">The directory where the template files are.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.Template.Name">
      <summary>
            Gets the name of the template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.Template.Capabilities">
      <summary>
            Gets the list of capabilities of this template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.Template.ScriptCommands">
      <summary>
            Gets the CSV list of script commands this template can detect.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Templates.TemplateCollection">
      <summary>
            Holds a list of the templates that are being used.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Templates">
      <summary>
            Gets the list of templates that are currently loaded.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Archetype">
      <summary>
            Standard Archetype template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.BlackGlass">
      <summary>
            Standard BlackGlass template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Chrome">
      <summary>
            Standard Chrome template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Clean">
      <summary>
            Standard Clean template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.CorporateSilver">
      <summary>
            Standard CorporateSilver template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Expression">
      <summary>
            Standard Expression template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.FrostedGallery">
      <summary>
            Standard FrostedGallery template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.GoldenAudio">
      <summary>
            Standard GoldenAudio template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Jukebox">
      <summary>
            Standard Jukebox template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Popup">
      <summary>
            Standard Popup template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.QuikSilver">
      <summary>
            Standard QuikSilver template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Reflection">
      <summary>
            Standard Reflection template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.AudioOnly">
      <summary>
            Standard AudioOnly template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Diagnostic">
      <summary>
            Standard Diagnostic template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Gallery">
      <summary>
            Standard Gallery template.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Templates.TemplateCollection.Standard">
      <summary>
            Standard template.
            </summary>
    </member>
    <member name="T:Microsoft.Expression.Encoder.Marker">
      <summary>
             Class that represents a marker.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Marker.#ctor">
      <summary>
            Initializes a new instance of the Marker class.
            </summary>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Marker.#ctor(System.TimeSpan,System.String)">
      <summary>
            Constructs a marker initialized with the passed values.
            </summary>
      <param name="time">The time of the marker</param>
      <param name="value">The string value of the marker</param>
    </member>
    <member name="M:Microsoft.Expression.Encoder.Marker.#ctor(Microsoft.Expression.Encoder.Source,System.TimeSpan,System.String)">
      <summary>
            Constructs a marker initialized with the passed values tied to a non-default source.
            </summary>
      <param name="mediaSource">The source this marker is tied to.</param>
      <param name="time">The time of the marker.</param>
      <param name="value">The string value of the marker.</param>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Marker.Time">
      <summary>
            Gets or sets the time of the marker.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Marker.Value">
      <summary>
            Gets or sets the string value of the marker.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Marker.GenerateKeyFrame">
      <summary>
            Gets or sets a value indicating whether a key frame should be generated for this marker.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Marker.GenerateThumbnail">
      <summary>
            Gets or sets a value indicating whether a thumbnail should be generated.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Marker.OutputTime">
      <summary>
            Current output time.
            </summary>
    </member>
    <member name="P:Microsoft.Expression.Encoder.Marker.MediaSource">
      <summary>
            Gets the source this media is for.
            </summary>
    </member>
  </members>
</doc>